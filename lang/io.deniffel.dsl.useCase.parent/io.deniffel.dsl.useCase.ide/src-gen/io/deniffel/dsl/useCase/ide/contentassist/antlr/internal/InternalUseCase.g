/*
 * generated by Xtext 2.13.0
 */
grammar InternalUseCase;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package io.deniffel.dsl.useCase.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package io.deniffel.dsl.useCase.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import io.deniffel.dsl.useCase.services.UseCaseGrammarAccess;

}
@parser::members {
	private UseCaseGrammarAccess grammarAccess;

	public void setGrammarAccess(UseCaseGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNumber
entryRuleQualifiedNumber
:
{ before(grammarAccess.getQualifiedNumberRule()); }
	 ruleQualifiedNumber
{ after(grammarAccess.getQualifiedNumberRule()); } 
	 EOF 
;

// Rule QualifiedNumber
ruleQualifiedNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNumberAccess().getGroup()); }
		(rule__QualifiedNumber__Group__0)
		{ after(grammarAccess.getQualifiedNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage
entryRulePackage
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageAccess().getGroup()); }
		(rule__Package__Group__0)
		{ after(grammarAccess.getPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackagePart
entryRulePackagePart
:
{ before(grammarAccess.getPackagePartRule()); }
	 rulePackagePart
{ after(grammarAccess.getPackagePartRule()); } 
	 EOF 
;

// Rule PackagePart
rulePackagePart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackagePartAccess().getNameAssignment()); }
		(rule__PackagePart__NameAssignment)
		{ after(grammarAccess.getPackagePartAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUseCase
entryRuleUseCase
:
{ before(grammarAccess.getUseCaseRule()); }
	 ruleUseCase
{ after(grammarAccess.getUseCaseRule()); } 
	 EOF 
;

// Rule UseCase
ruleUseCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUseCaseAccess().getGroup()); }
		(rule__UseCase__Group__0)
		{ after(grammarAccess.getUseCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDescription
entryRuleDescription
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDescriptionAccess().getGroup()); }
		(rule__Description__Group__0)
		{ after(grammarAccess.getDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAllowedUserGroups
entryRuleAllowedUserGroups
:
{ before(grammarAccess.getAllowedUserGroupsRule()); }
	 ruleAllowedUserGroups
{ after(grammarAccess.getAllowedUserGroupsRule()); } 
	 EOF 
;

// Rule AllowedUserGroups
ruleAllowedUserGroups 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAllowedUserGroupsAccess().getGroup()); }
		(rule__AllowedUserGroups__Group__0)
		{ after(grammarAccess.getAllowedUserGroupsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAllowedUserGroup
entryRuleAllowedUserGroup
:
{ before(grammarAccess.getAllowedUserGroupRule()); }
	 ruleAllowedUserGroup
{ after(grammarAccess.getAllowedUserGroupRule()); } 
	 EOF 
;

// Rule AllowedUserGroup
ruleAllowedUserGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAllowedUserGroupAccess().getGroup()); }
		(rule__AllowedUserGroup__Group__0)
		{ after(grammarAccess.getAllowedUserGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputs
entryRuleInputs
:
{ before(grammarAccess.getInputsRule()); }
	 ruleInputs
{ after(grammarAccess.getInputsRule()); } 
	 EOF 
;

// Rule Inputs
ruleInputs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputsAccess().getGroup()); }
		(rule__Inputs__Group__0)
		{ after(grammarAccess.getInputsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputs
entryRuleOutputs
:
{ before(grammarAccess.getOutputsRule()); }
	 ruleOutputs
{ after(grammarAccess.getOutputsRule()); } 
	 EOF 
;

// Rule Outputs
ruleOutputs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputsAccess().getGroup()); }
		(rule__Outputs__Group__0)
		{ after(grammarAccess.getOutputsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOptional
entryRuleOptional
:
{ before(grammarAccess.getOptionalRule()); }
	 ruleOptional
{ after(grammarAccess.getOptionalRule()); } 
	 EOF 
;

// Rule Optional
ruleOptional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptionalAccess().getOptionalKeyword()); }
		'optional'
		{ after(grammarAccess.getOptionalAccess().getOptionalKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreConditions
entryRulePreConditions
:
{ before(grammarAccess.getPreConditionsRule()); }
	 rulePreConditions
{ after(grammarAccess.getPreConditionsRule()); } 
	 EOF 
;

// Rule PreConditions
rulePreConditions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreConditionsAccess().getGroup()); }
		(rule__PreConditions__Group__0)
		{ after(grammarAccess.getPreConditionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSteps
entryRuleSteps
:
{ before(grammarAccess.getStepsRule()); }
	 ruleSteps
{ after(grammarAccess.getStepsRule()); } 
	 EOF 
;

// Rule Steps
ruleSteps 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepsAccess().getGroup()); }
		(rule__Steps__Group__0)
		{ after(grammarAccess.getStepsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStep
entryRuleStep
:
{ before(grammarAccess.getStepRule()); }
	 ruleStep
{ after(grammarAccess.getStepRule()); } 
	 EOF 
;

// Rule Step
ruleStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepAccess().getGroup()); }
		(rule__Step__Group__0)
		{ after(grammarAccess.getStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRaiseErrorConditional
entryRuleRaiseErrorConditional
:
{ before(grammarAccess.getRaiseErrorConditionalRule()); }
	 ruleRaiseErrorConditional
{ after(grammarAccess.getRaiseErrorConditionalRule()); } 
	 EOF 
;

// Rule RaiseErrorConditional
ruleRaiseErrorConditional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRaiseErrorConditionalAccess().getGroup()); }
		(rule__RaiseErrorConditional__Group__0)
		{ after(grammarAccess.getRaiseErrorConditionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRaiseErrorNow
entryRuleRaiseErrorNow
:
{ before(grammarAccess.getRaiseErrorNowRule()); }
	 ruleRaiseErrorNow
{ after(grammarAccess.getRaiseErrorNowRule()); } 
	 EOF 
;

// Rule RaiseErrorNow
ruleRaiseErrorNow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRaiseErrorNowAccess().getGroup()); }
		(rule__RaiseErrorNow__Group__0)
		{ after(grammarAccess.getRaiseErrorNowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoop
entryRuleLoop
:
{ before(grammarAccess.getLoopRule()); }
	 ruleLoop
{ after(grammarAccess.getLoopRule()); } 
	 EOF 
;

// Rule Loop
ruleLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopAccess().getGroup()); }
		(rule__Loop__Group__0)
		{ after(grammarAccess.getLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanCondition
entryRuleBooleanCondition
:
{ before(grammarAccess.getBooleanConditionRule()); }
	 ruleBooleanCondition
{ after(grammarAccess.getBooleanConditionRule()); } 
	 EOF 
;

// Rule BooleanCondition
ruleBooleanCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanConditionAccess().getNameAssignment()); }
		(rule__BooleanCondition__NameAssignment)
		{ after(grammarAccess.getBooleanConditionAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotes
entryRuleNotes
:
{ before(grammarAccess.getNotesRule()); }
	 ruleNotes
{ after(grammarAccess.getNotesRule()); } 
	 EOF 
;

// Rule Notes
ruleNotes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotesAccess().getGroup()); }
		(rule__Notes__Group__0)
		{ after(grammarAccess.getNotesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUsedTypes
entryRuleUsedTypes
:
{ before(grammarAccess.getUsedTypesRule()); }
	 ruleUsedTypes
{ after(grammarAccess.getUsedTypesRule()); } 
	 EOF 
;

// Rule UsedTypes
ruleUsedTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUsedTypesAccess().getGroup()); }
		(rule__UsedTypes__Group__0)
		{ after(grammarAccess.getUsedTypesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUsedExceptions
entryRuleUsedExceptions
:
{ before(grammarAccess.getUsedExceptionsRule()); }
	 ruleUsedExceptions
{ after(grammarAccess.getUsedExceptionsRule()); } 
	 EOF 
;

// Rule UsedExceptions
ruleUsedExceptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUsedExceptionsAccess().getGroup()); }
		(rule__UsedExceptions__Group__0)
		{ after(grammarAccess.getUsedExceptionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleException
entryRuleException
:
{ before(grammarAccess.getExceptionRule()); }
	 ruleException
{ after(grammarAccess.getExceptionRule()); } 
	 EOF 
;

// Rule Exception
ruleException 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExceptionAccess().getTypeAssignment()); }
		(rule__Exception__TypeAssignment)
		{ after(grammarAccess.getExceptionAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExceptionDecleration
entryRuleExceptionDecleration
:
{ before(grammarAccess.getExceptionDeclerationRule()); }
	 ruleExceptionDecleration
{ after(grammarAccess.getExceptionDeclerationRule()); } 
	 EOF 
;

// Rule ExceptionDecleration
ruleExceptionDecleration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExceptionDeclerationAccess().getGroup()); }
		(rule__ExceptionDecleration__Group__0)
		{ after(grammarAccess.getExceptionDeclerationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFirmaKeyword_0_0()); }
		'Firma'
		{ after(grammarAccess.getModelAccess().getFirmaKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getCompanyKeyword_0_1()); }
		'Company'
		{ after(grammarAccess.getModelAccess().getCompanyKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getKathegorieKeyword_0_0()); }
		'Kathegorie'
		{ after(grammarAccess.getPackageAccess().getKathegorieKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageAccess().getPackageKeyword_0_1()); }
		'package'
		{ after(grammarAccess.getPackageAccess().getPackageKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getUseCaseKeyword_0_0()); }
		'use-case'
		{ after(grammarAccess.getUseCaseAccess().getUseCaseKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUseCaseAccess().getRezeptKeyword_0_1()); }
		'Rezept'
		{ after(grammarAccess.getUseCaseAccess().getRezeptKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Alternatives_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getGroup_9_0()); }
		(rule__UseCase__Group_9_0__0)
		{ after(grammarAccess.getUseCaseAccess().getGroup_9_0()); }
	)
	|
	(
		{ before(grammarAccess.getUseCaseAccess().getGroup_9_1()); }
		(rule__UseCase__Group_9_1__0)
		{ after(grammarAccess.getUseCaseAccess().getGroup_9_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDescriptionAccess().getDescriptionKeyword_0_0()); }
		'description:'
		{ after(grammarAccess.getDescriptionAccess().getDescriptionKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDescriptionAccess().getKurzbeschreibungKeyword_0_1()); }
		'Kurzbeschreibung:'
		{ after(grammarAccess.getDescriptionAccess().getKurzbeschreibungKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDescriptionAccess().getBeschreibungKeyword_0_2()); }
		'Beschreibung'
		{ after(grammarAccess.getDescriptionAccess().getBeschreibungKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroups__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAllowedUserGroupsAccess().getAllowedUsergroupsKeyword_0_0()); }
		'allowed-usergroups:'
		{ after(grammarAccess.getAllowedUserGroupsAccess().getAllowedUsergroupsKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAllowedUserGroupsAccess().getGroup_0_1()); }
		(rule__AllowedUserGroups__Group_0_1__0)
		{ after(grammarAccess.getAllowedUserGroupsAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputsAccess().getAlternatives_0_0()); }
		(rule__Inputs__Alternatives_0_0)
		{ after(grammarAccess.getInputsAccess().getAlternatives_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInputsAccess().getGroup_0_1()); }
		(rule__Inputs__Group_0_1__0)
		{ after(grammarAccess.getInputsAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputsAccess().getRequiresKeyword_0_0_0()); }
		'requires:'
		{ after(grammarAccess.getInputsAccess().getRequiresKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInputsAccess().getRequireKeyword_0_0_1()); }
		'require:'
		{ after(grammarAccess.getInputsAccess().getRequireKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getInputsAccess().getGroup_0_0_2()); }
		(rule__Inputs__Group_0_0_2__0)
		{ after(grammarAccess.getInputsAccess().getGroup_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getAsKeyword_4_0_0()); }
		'as'
		{ after(grammarAccess.getInputAccess().getAsKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInputAccess().getAlsKeyword_4_0_1()); }
		'als'
		{ after(grammarAccess.getInputAccess().getAlsKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Alternatives_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getEGKeyword_5_1_0()); }
		'e.g'
		{ after(grammarAccess.getInputAccess().getEGKeyword_5_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getInputAccess().getZBKeyword_5_1_1()); }
		'z.B.'
		{ after(grammarAccess.getInputAccess().getZBKeyword_5_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputsAccess().getAlternatives_0_0()); }
		(rule__Outputs__Alternatives_0_0)
		{ after(grammarAccess.getOutputsAccess().getAlternatives_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputsAccess().getErgebnisKeyword_0_1()); }
		'Ergebnis:'
		{ after(grammarAccess.getOutputsAccess().getErgebnisKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputsAccess().getProducesKeyword_0_0_0()); }
		'produces:'
		{ after(grammarAccess.getOutputsAccess().getProducesKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputsAccess().getProduceKeyword_0_0_1()); }
		'produce:'
		{ after(grammarAccess.getOutputsAccess().getProduceKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getOutputsAccess().getGroup_0_0_2()); }
		(rule__Outputs__Group_0_0_2__0)
		{ after(grammarAccess.getOutputsAccess().getGroup_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Alternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getAsKeyword_3_0_0()); }
		'as'
		{ after(grammarAccess.getOutputAccess().getAsKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputAccess().getAlsKeyword_3_0_1()); }
		'als'
		{ after(grammarAccess.getOutputAccess().getAlsKeyword_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getEGKeyword_4_1_0()); }
		'e.g'
		{ after(grammarAccess.getOutputAccess().getEGKeyword_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputAccess().getZBKeyword_4_1_1()); }
		'z.B.'
		{ after(grammarAccess.getOutputAccess().getZBKeyword_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreConditions__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreConditionsAccess().getAlternatives_0_0()); }
		(rule__PreConditions__Alternatives_0_0)
		{ after(grammarAccess.getPreConditionsAccess().getAlternatives_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPreConditionsAccess().getVorbedingungenKeyword_0_1()); }
		'Vorbedingungen:'
		{ after(grammarAccess.getPreConditionsAccess().getVorbedingungenKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreConditions__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreConditionsAccess().getPreConditionKeyword_0_0_0()); }
		'pre-condition:'
		{ after(grammarAccess.getPreConditionsAccess().getPreConditionKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPreConditionsAccess().getPreConditionsKeyword_0_0_1()); }
		'pre-conditions:'
		{ after(grammarAccess.getPreConditionsAccess().getPreConditionsKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Steps__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepsAccess().getStepsKeyword_0_0()); }
		'steps:'
		{ after(grammarAccess.getStepsAccess().getStepsKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStepsAccess().getSchritteKeyword_0_1()); }
		'Schritte:'
		{ after(grammarAccess.getStepsAccess().getSchritteKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getGroup_1_0()); }
		(rule__Step__Group_1_0__0)
		{ after(grammarAccess.getStepAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getErrorAssignment_1_1()); }
		(rule__Step__ErrorAssignment_1_1)
		{ after(grammarAccess.getStepAccess().getErrorAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getConditionAssignment_1_2()); }
		(rule__Step__ConditionAssignment_1_2)
		{ after(grammarAccess.getStepAccess().getConditionAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getLoopAssignment_1_3()); }
		(rule__Step__LoopAssignment_1_3)
		{ after(grammarAccess.getStepAccess().getLoopAssignment_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getExceptionAssignment_1_4()); }
		(rule__Step__ExceptionAssignment_1_4)
		{ after(grammarAccess.getStepAccess().getExceptionAssignment_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaiseErrorConditionalAccess().getFullStopKeyword_0_0()); }
		'.'
		{ after(grammarAccess.getRaiseErrorConditionalAccess().getFullStopKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRaiseErrorConditionalAccess().getColonKeyword_0_1()); }
		':'
		{ after(grammarAccess.getRaiseErrorConditionalAccess().getColonKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaiseErrorConditionalAccess().getGroup_1_0()); }
		(rule__RaiseErrorConditional__Group_1_0__0)
		{ after(grammarAccess.getRaiseErrorConditionalAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRaiseErrorConditionalAccess().getGroup_1_1()); }
		(rule__RaiseErrorConditional__Group_1_1__0)
		{ after(grammarAccess.getRaiseErrorConditionalAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorNow__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaiseErrorNowAccess().getGroup_0_0()); }
		(rule__RaiseErrorNow__Group_0_0__0)
		{ after(grammarAccess.getRaiseErrorNowAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRaiseErrorNowAccess().getGroup_0_1()); }
		(rule__RaiseErrorNow__Group_0_1__0)
		{ after(grammarAccess.getRaiseErrorNowAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0_0()); }
		'If'
		{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfStatementAccess().getFallsKeyword_0_1()); }
		'Falls'
		{ after(grammarAccess.getIfStatementAccess().getFallsKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getSolangeKeyword_0_0()); }
		'Solange'
		{ after(grammarAccess.getLoopAccess().getSolangeKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLoopAccess().getWhileKeyword_0_1()); }
		'While'
		{ after(grammarAccess.getLoopAccess().getWhileKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notes__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotesAccess().getAlternatives_0_0()); }
		(rule__Notes__Alternatives_0_0)
		{ after(grammarAccess.getNotesAccess().getAlternatives_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNotesAccess().getAlternatives_0_1()); }
		(rule__Notes__Alternatives_0_1)
		{ after(grammarAccess.getNotesAccess().getAlternatives_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notes__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotesAccess().getNotesKeyword_0_0_0()); }
		'notes:'
		{ after(grammarAccess.getNotesAccess().getNotesKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNotesAccess().getNoteKeyword_0_0_1()); }
		'note:'
		{ after(grammarAccess.getNotesAccess().getNoteKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notes__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotesAccess().getAnmerkungenKeyword_0_1_0()); }
		'Anmerkungen:'
		{ after(grammarAccess.getNotesAccess().getAnmerkungenKeyword_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNotesAccess().getAnmerkungKeyword_0_1_1()); }
		'Anmerkung:'
		{ after(grammarAccess.getNotesAccess().getAnmerkungKeyword_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedTypes__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUsedTypesAccess().getGroup_0_0()); }
		(rule__UsedTypes__Group_0_0__0)
		{ after(grammarAccess.getUsedTypesAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUsedTypesAccess().getGroup_0_1()); }
		(rule__UsedTypes__Group_0_1__0)
		{ after(grammarAccess.getUsedTypesAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedExceptions__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUsedExceptionsAccess().getGroup_0_0()); }
		(rule__UsedExceptions__Group_0_0__0)
		{ after(grammarAccess.getUsedExceptionsAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUsedExceptionsAccess().getGroup_0_1()); }
		(rule__UsedExceptions__Group_0_1__0)
		{ after(grammarAccess.getUsedExceptionsAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAlternatives_0()); }
	(rule__Model__Alternatives_0)
	{ after(grammarAccess.getModelAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getCompanyAssignment_1()); }
	(rule__Model__CompanyAssignment_1)
	{ after(grammarAccess.getModelAccess().getCompanyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPackageAssignment_2()); }
	(rule__Model__PackageAssignment_2)
	{ after(grammarAccess.getModelAccess().getPackageAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getUseCasesAssignment_3()); }
	(rule__Model__UseCasesAssignment_3)*
	{ after(grammarAccess.getModelAccess().getUseCasesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getTypesAssignment_4()); }
	(rule__Model__TypesAssignment_4)
	{ after(grammarAccess.getModelAccess().getTypesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getExceptionsAssignment_5()); }
	(rule__Model__ExceptionsAssignment_5)
	{ after(grammarAccess.getModelAccess().getExceptionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNumber__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNumber__Group__0__Impl
	rule__QualifiedNumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNumber__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNumberAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getQualifiedNumberAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNumber__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNumber__Group__1__Impl
	rule__QualifiedNumber__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNumber__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNumberAccess().getGroup_1()); }
	(rule__QualifiedNumber__Group_1__0)*
	{ after(grammarAccess.getQualifiedNumberAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNumber__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNumber__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNumber__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNumberAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getQualifiedNumberAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNumber__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNumber__Group_1__0__Impl
	rule__QualifiedNumber__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNumber__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNumberAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNumberAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNumber__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNumber__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNumber__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNumberAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
	{ after(grammarAccess.getQualifiedNumberAccess().getINTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getAlternatives_0()); }
	(rule__Package__Alternatives_0)
	{ after(grammarAccess.getPackageAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getPartsAssignment_1()); }
	(rule__Package__PartsAssignment_1)
	{ after(grammarAccess.getPackageAccess().getPartsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getGroup_2()); }
	(rule__Package__Group_2__0)*
	{ after(grammarAccess.getPackageAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group_2__0__Impl
	rule__Package__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getGreaterThanSignKeyword_2_0()); }
	'>'
	{ after(grammarAccess.getPackageAccess().getGreaterThanSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getPartsAssignment_2_1()); }
	(rule__Package__PartsAssignment_2_1)
	{ after(grammarAccess.getPackageAccess().getPartsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__0__Impl
	rule__UseCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getAlternatives_0()); }
	(rule__UseCase__Alternatives_0)
	{ after(grammarAccess.getUseCaseAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__1__Impl
	rule__UseCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getNameAssignment_1()); }
	(rule__UseCase__NameAssignment_1)
	{ after(grammarAccess.getUseCaseAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__2__Impl
	rule__UseCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getDescriptionsAssignment_2()); }
	(rule__UseCase__DescriptionsAssignment_2)?
	{ after(grammarAccess.getUseCaseAccess().getDescriptionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__3__Impl
	rule__UseCase__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getAllowedUserGroupsAssignment_3()); }
	(rule__UseCase__AllowedUserGroupsAssignment_3)?
	{ after(grammarAccess.getUseCaseAccess().getAllowedUserGroupsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__4__Impl
	rule__UseCase__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getInputsAssignment_4()); }
	(rule__UseCase__InputsAssignment_4)?
	{ after(grammarAccess.getUseCaseAccess().getInputsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__5__Impl
	rule__UseCase__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getOutputsAssignment_5()); }
	(rule__UseCase__OutputsAssignment_5)?
	{ after(grammarAccess.getUseCaseAccess().getOutputsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__6__Impl
	rule__UseCase__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getPreconditionsAssignment_6()); }
	(rule__UseCase__PreconditionsAssignment_6)?
	{ after(grammarAccess.getUseCaseAccess().getPreconditionsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__7__Impl
	rule__UseCase__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getStepsAssignment_7()); }
	(rule__UseCase__StepsAssignment_7)?
	{ after(grammarAccess.getUseCaseAccess().getStepsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__8__Impl
	rule__UseCase__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getNotesAssignment_8()); }
	(rule__UseCase__NotesAssignment_8)?
	{ after(grammarAccess.getUseCaseAccess().getNotesAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getAlternatives_9()); }
	(rule__UseCase__Alternatives_9)
	{ after(grammarAccess.getUseCaseAccess().getAlternatives_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group_9_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group_9_0__0__Impl
	rule__UseCase__Group_9_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_9_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getEndKeyword_9_0_0()); }
	'end'
	{ after(grammarAccess.getUseCaseAccess().getEndKeyword_9_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_9_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group_9_0__1__Impl
	rule__UseCase__Group_9_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_9_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getOfKeyword_9_0_1()); }
	'of'
	{ after(grammarAccess.getUseCaseAccess().getOfKeyword_9_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_9_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group_9_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_9_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getUseCaseKeyword_9_0_2()); }
	'use-case'
	{ after(grammarAccess.getUseCaseAccess().getUseCaseKeyword_9_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group_9_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group_9_1__0__Impl
	rule__UseCase__Group_9_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_9_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getEndeKeyword_9_1_0()); }
	'Ende'
	{ after(grammarAccess.getUseCaseAccess().getEndeKeyword_9_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_9_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group_9_1__1__Impl
	rule__UseCase__Group_9_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_9_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getDesKeyword_9_1_1()); }
	'des'
	{ after(grammarAccess.getUseCaseAccess().getDesKeyword_9_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_9_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group_9_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_9_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getRezpetsKeyword_9_1_2()); }
	'Rezpets'
	{ after(grammarAccess.getUseCaseAccess().getRezpetsKeyword_9_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Description__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__0__Impl
	rule__Description__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getAlternatives_0()); }
	(rule__Description__Alternatives_0)
	{ after(grammarAccess.getDescriptionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getNameAssignment_1()); }
	(rule__Description__NameAssignment_1)
	{ after(grammarAccess.getDescriptionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AllowedUserGroups__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllowedUserGroups__Group__0__Impl
	rule__AllowedUserGroups__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroups__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllowedUserGroupsAccess().getAlternatives_0()); }
	(rule__AllowedUserGroups__Alternatives_0)
	{ after(grammarAccess.getAllowedUserGroupsAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroups__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllowedUserGroups__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroups__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllowedUserGroupsAccess().getGroupsAssignment_1()); }
	(rule__AllowedUserGroups__GroupsAssignment_1)*
	{ after(grammarAccess.getAllowedUserGroupsAccess().getGroupsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AllowedUserGroups__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllowedUserGroups__Group_0_1__0__Impl
	rule__AllowedUserGroups__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroups__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllowedUserGroupsAccess().getErlaubtKeyword_0_1_0()); }
	'Erlaubt'
	{ after(grammarAccess.getAllowedUserGroupsAccess().getErlaubtKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroups__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllowedUserGroups__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroups__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllowedUserGroupsAccess().getFürKeyword_0_1_1()); }
	'f\u00FCr:'
	{ after(grammarAccess.getAllowedUserGroupsAccess().getFürKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AllowedUserGroup__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllowedUserGroup__Group__0__Impl
	rule__AllowedUserGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroup__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllowedUserGroupAccess().getManyAssignment_0()); }
	(rule__AllowedUserGroup__ManyAssignment_0)?
	{ after(grammarAccess.getAllowedUserGroupAccess().getManyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroup__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllowedUserGroup__Group__1__Impl
	rule__AllowedUserGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroup__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllowedUserGroupAccess().getHyphenMinusKeyword_1()); }
	'-'
	{ after(grammarAccess.getAllowedUserGroupAccess().getHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroup__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllowedUserGroup__Group__2__Impl
	rule__AllowedUserGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroup__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllowedUserGroupAccess().getNameAssignment_2()); }
	(rule__AllowedUserGroup__NameAssignment_2)
	{ after(grammarAccess.getAllowedUserGroupAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroup__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllowedUserGroup__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroup__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllowedUserGroupAccess().getGroup_3()); }
	(rule__AllowedUserGroup__Group_3__0)?
	{ after(grammarAccess.getAllowedUserGroupAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AllowedUserGroup__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllowedUserGroup__Group_3__0__Impl
	rule__AllowedUserGroup__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroup__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllowedUserGroupAccess().getAsKeyword_3_0()); }
	'as'
	{ after(grammarAccess.getAllowedUserGroupAccess().getAsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroup__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllowedUserGroup__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroup__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllowedUserGroupAccess().getTypeAssignment_3_1()); }
	(rule__AllowedUserGroup__TypeAssignment_3_1)
	{ after(grammarAccess.getAllowedUserGroupAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inputs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group__0__Impl
	rule__Inputs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsAccess().getAlternatives_0()); }
	(rule__Inputs__Alternatives_0)
	{ after(grammarAccess.getInputsAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsAccess().getInputsAssignment_1()); }
	(rule__Inputs__InputsAssignment_1)*
	{ after(grammarAccess.getInputsAccess().getInputsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inputs__Group_0_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group_0_0_2__0__Impl
	rule__Inputs__Group_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsAccess().getRequiresKeyword_0_0_2_0()); }
	'requires'
	{ after(grammarAccess.getInputsAccess().getRequiresKeyword_0_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group_0_0_2__1__Impl
	rule__Inputs__Group_0_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsAccess().getTheKeyword_0_0_2_1()); }
	'the'
	{ after(grammarAccess.getInputsAccess().getTheKeyword_0_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group_0_0_2__2__Impl
	rule__Inputs__Group_0_0_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsAccess().getFollowingKeyword_0_0_2_2()); }
	'following'
	{ after(grammarAccess.getInputsAccess().getFollowingKeyword_0_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_0_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group_0_0_2__3__Impl
	rule__Inputs__Group_0_0_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_0_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsAccess().getInputKeyword_0_0_2_3()); }
	'input'
	{ after(grammarAccess.getInputsAccess().getInputKeyword_0_0_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_0_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group_0_0_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_0_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsAccess().getColonKeyword_0_0_2_4()); }
	':'
	{ after(grammarAccess.getInputsAccess().getColonKeyword_0_0_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inputs__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group_0_1__0__Impl
	rule__Inputs__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsAccess().getBenötigteKeyword_0_1_0()); }
	'Ben\u00F6tigte'
	{ after(grammarAccess.getInputsAccess().getBenötigteKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group_0_1__1__Impl
	rule__Inputs__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsAccess().getZutatenKeyword_0_1_1()); }
	'Zutaten'
	{ after(grammarAccess.getInputsAccess().getZutatenKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inputs__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputsAccess().getColonKeyword_0_1_2()); }
	':'
	{ after(grammarAccess.getInputsAccess().getColonKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getManyAssignment_0()); }
	(rule__Input__ManyAssignment_0)?
	{ after(grammarAccess.getInputAccess().getManyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
	rule__Input__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getHyphenMinusKeyword_1()); }
	'-'
	{ after(grammarAccess.getInputAccess().getHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__2__Impl
	rule__Input__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getOptionalAssignment_2()); }
	(rule__Input__OptionalAssignment_2)?
	{ after(grammarAccess.getInputAccess().getOptionalAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__3__Impl
	rule__Input__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getContentAssignment_3()); }
	(rule__Input__ContentAssignment_3)
	{ after(grammarAccess.getInputAccess().getContentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__4__Impl
	rule__Input__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getGroup_4()); }
	(rule__Input__Group_4__0)?
	{ after(grammarAccess.getInputAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getGroup_5()); }
	(rule__Input__Group_5__0)?
	{ after(grammarAccess.getInputAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_4__0__Impl
	rule__Input__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getAlternatives_4_0()); }
	(rule__Input__Alternatives_4_0)
	{ after(grammarAccess.getInputAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getTypeAssignment_4_1()); }
	(rule__Input__TypeAssignment_4_1)
	{ after(grammarAccess.getInputAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_5__0__Impl
	rule__Input__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getLeftParenthesisKeyword_5_0()); }
	'('
	{ after(grammarAccess.getInputAccess().getLeftParenthesisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_5__1__Impl
	rule__Input__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getAlternatives_5_1()); }
	(rule__Input__Alternatives_5_1)
	{ after(grammarAccess.getInputAccess().getAlternatives_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_5__2__Impl
	rule__Input__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getExampleAssignment_5_2()); }
	(rule__Input__ExampleAssignment_5_2)
	{ after(grammarAccess.getInputAccess().getExampleAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getRightParenthesisKeyword_5_3()); }
	')'
	{ after(grammarAccess.getInputAccess().getRightParenthesisKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Outputs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Outputs__Group__0__Impl
	rule__Outputs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputsAccess().getAlternatives_0()); }
	(rule__Outputs__Alternatives_0)
	{ after(grammarAccess.getOutputsAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Outputs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputsAccess().getOutputsAssignment_1()); }
	(rule__Outputs__OutputsAssignment_1)*
	{ after(grammarAccess.getOutputsAccess().getOutputsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Outputs__Group_0_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Outputs__Group_0_0_2__0__Impl
	rule__Outputs__Group_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Group_0_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputsAccess().getProducesKeyword_0_0_2_0()); }
	'produces'
	{ after(grammarAccess.getOutputsAccess().getProducesKeyword_0_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Group_0_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Outputs__Group_0_0_2__1__Impl
	rule__Outputs__Group_0_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Group_0_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputsAccess().getTheKeyword_0_0_2_1()); }
	'the'
	{ after(grammarAccess.getOutputsAccess().getTheKeyword_0_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Group_0_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Outputs__Group_0_0_2__2__Impl
	rule__Outputs__Group_0_0_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Group_0_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputsAccess().getFollowingKeyword_0_0_2_2()); }
	'following'
	{ after(grammarAccess.getOutputsAccess().getFollowingKeyword_0_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Group_0_0_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Outputs__Group_0_0_2__3__Impl
	rule__Outputs__Group_0_0_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Group_0_0_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputsAccess().getOutputKeyword_0_0_2_3()); }
	'output'
	{ after(grammarAccess.getOutputsAccess().getOutputKeyword_0_0_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Group_0_0_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Outputs__Group_0_0_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__Group_0_0_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputsAccess().getColonKeyword_0_0_2_4()); }
	':'
	{ after(grammarAccess.getOutputsAccess().getColonKeyword_0_0_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getManyAssignment_0()); }
	(rule__Output__ManyAssignment_0)?
	{ after(grammarAccess.getOutputAccess().getManyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
	rule__Output__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getHyphenMinusKeyword_1()); }
	'-'
	{ after(grammarAccess.getOutputAccess().getHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__2__Impl
	rule__Output__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getContentAssignment_2()); }
	(rule__Output__ContentAssignment_2)
	{ after(grammarAccess.getOutputAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__3__Impl
	rule__Output__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getGroup_3()); }
	(rule__Output__Group_3__0)?
	{ after(grammarAccess.getOutputAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getGroup_4()); }
	(rule__Output__Group_4__0)?
	{ after(grammarAccess.getOutputAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_3__0__Impl
	rule__Output__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getAlternatives_3_0()); }
	(rule__Output__Alternatives_3_0)
	{ after(grammarAccess.getOutputAccess().getAlternatives_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getTypeAssignment_3_1()); }
	(rule__Output__TypeAssignment_3_1)
	{ after(grammarAccess.getOutputAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_4__0__Impl
	rule__Output__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getOutputAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_4__1__Impl
	rule__Output__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getAlternatives_4_1()); }
	(rule__Output__Alternatives_4_1)
	{ after(grammarAccess.getOutputAccess().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_4__2__Impl
	rule__Output__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getExampleAssignment_4_2()); }
	(rule__Output__ExampleAssignment_4_2)
	{ after(grammarAccess.getOutputAccess().getExampleAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getRightParenthesisKeyword_4_3()); }
	')'
	{ after(grammarAccess.getOutputAccess().getRightParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PreConditions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreConditions__Group__0__Impl
	rule__PreConditions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreConditions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreConditionsAccess().getAlternatives_0()); }
	(rule__PreConditions__Alternatives_0)
	{ after(grammarAccess.getPreConditionsAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreConditions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreConditions__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreConditions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreConditionsAccess().getConditionsAssignment_1()); }
	(rule__PreConditions__ConditionsAssignment_1)*
	{ after(grammarAccess.getPreConditionsAccess().getConditionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getConditionAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getContentAssignment_1()); }
	(rule__Condition__ContentAssignment_1)
	{ after(grammarAccess.getConditionAccess().getContentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Steps__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Steps__Group__0__Impl
	rule__Steps__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Steps__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepsAccess().getAlternatives_0()); }
	(rule__Steps__Alternatives_0)
	{ after(grammarAccess.getStepsAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Steps__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Steps__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Steps__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepsAccess().getStepsAssignment_1()); }
	(rule__Steps__StepsAssignment_1)*
	{ after(grammarAccess.getStepsAccess().getStepsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__0__Impl
	rule__Step__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getNumberAssignment_0()); }
	(rule__Step__NumberAssignment_0)
	{ after(grammarAccess.getStepAccess().getNumberAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getAlternatives_1()); }
	(rule__Step__Alternatives_1)
	{ after(grammarAccess.getStepAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Step__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_1_0__0__Impl
	rule__Step__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getActionAssignment_1_0_0()); }
	(rule__Step__ActionAssignment_1_0_0)
	{ after(grammarAccess.getStepAccess().getActionAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Step__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepAccess().getErrorAssignment_1_0_1()); }
	(rule__Step__ErrorAssignment_1_0_1)?
	{ after(grammarAccess.getStepAccess().getErrorAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RaiseErrorConditional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorConditional__Group__0__Impl
	rule__RaiseErrorConditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorConditionalAccess().getAlternatives_0()); }
	(rule__RaiseErrorConditional__Alternatives_0)
	{ after(grammarAccess.getRaiseErrorConditionalAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorConditional__Group__1__Impl
	rule__RaiseErrorConditional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorConditionalAccess().getAlternatives_1()); }
	(rule__RaiseErrorConditional__Alternatives_1)
	{ after(grammarAccess.getRaiseErrorConditionalAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorConditional__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorConditionalAccess().getExceptionAssignment_2()); }
	(rule__RaiseErrorConditional__ExceptionAssignment_2)
	{ after(grammarAccess.getRaiseErrorConditionalAccess().getExceptionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RaiseErrorConditional__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorConditional__Group_1_0__0__Impl
	rule__RaiseErrorConditional__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorConditionalAccess().getOnKeyword_1_0_0()); }
	'On'
	{ after(grammarAccess.getRaiseErrorConditionalAccess().getOnKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorConditional__Group_1_0__1__Impl
	rule__RaiseErrorConditional__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorConditionalAccess().getErrorKeyword_1_0_1()); }
	'error'
	{ after(grammarAccess.getRaiseErrorConditionalAccess().getErrorKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorConditional__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorConditionalAccess().getRaiseKeyword_1_0_2()); }
	'raise'
	{ after(grammarAccess.getRaiseErrorConditionalAccess().getRaiseKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RaiseErrorConditional__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorConditional__Group_1_1__0__Impl
	rule__RaiseErrorConditional__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorConditionalAccess().getBeiKeyword_1_1_0()); }
	'Bei'
	{ after(grammarAccess.getRaiseErrorConditionalAccess().getBeiKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorConditional__Group_1_1__1__Impl
	rule__RaiseErrorConditional__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorConditionalAccess().getFehlerKeyword_1_1_1()); }
	'Fehler'
	{ after(grammarAccess.getRaiseErrorConditionalAccess().getFehlerKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorConditional__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorConditionalAccess().getMeldeKeyword_1_1_2()); }
	'melde'
	{ after(grammarAccess.getRaiseErrorConditionalAccess().getMeldeKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RaiseErrorNow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorNow__Group__0__Impl
	rule__RaiseErrorNow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorNow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorNowAccess().getAlternatives_0()); }
	(rule__RaiseErrorNow__Alternatives_0)
	{ after(grammarAccess.getRaiseErrorNowAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorNow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorNow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorNow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorNowAccess().getExceptionAssignment_1()); }
	(rule__RaiseErrorNow__ExceptionAssignment_1)
	{ after(grammarAccess.getRaiseErrorNowAccess().getExceptionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RaiseErrorNow__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorNow__Group_0_0__0__Impl
	rule__RaiseErrorNow__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorNow__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorNowAccess().getRaiseKeyword_0_0_0()); }
	'Raise'
	{ after(grammarAccess.getRaiseErrorNowAccess().getRaiseKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorNow__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorNow__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorNow__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorNowAccess().getErrorKeyword_0_0_1()); }
	('error')?
	{ after(grammarAccess.getRaiseErrorNowAccess().getErrorKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RaiseErrorNow__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorNow__Group_0_1__0__Impl
	rule__RaiseErrorNow__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorNow__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorNowAccess().getMeldeKeyword_0_1_0()); }
	'Melde'
	{ after(grammarAccess.getRaiseErrorNowAccess().getMeldeKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorNow__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RaiseErrorNow__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorNow__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaiseErrorNowAccess().getFehlerKeyword_0_1_1()); }
	('Fehler')?
	{ after(grammarAccess.getRaiseErrorNowAccess().getFehlerKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getAlternatives_0()); }
	(rule__IfStatement__Alternatives_0)
	{ after(grammarAccess.getIfStatementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getConditionAssignment_1()); }
	(rule__IfStatement__ConditionAssignment_1)
	{ after(grammarAccess.getIfStatementAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getIfStatementAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__0__Impl
	rule__Loop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getAlternatives_0()); }
	(rule__Loop__Alternatives_0)
	{ after(grammarAccess.getLoopAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__1__Impl
	rule__Loop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getConditionAssignment_1()); }
	(rule__Loop__ConditionAssignment_1)
	{ after(grammarAccess.getLoopAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getLoopAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Notes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Notes__Group__0__Impl
	rule__Notes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Notes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotesAccess().getAlternatives_0()); }
	(rule__Notes__Alternatives_0)
	{ after(grammarAccess.getNotesAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Notes__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Notes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotesAccess().getContentAssignment_1()); }
	(rule__Notes__ContentAssignment_1)
	{ after(grammarAccess.getNotesAccess().getContentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UsedTypes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsedTypes__Group__0__Impl
	rule__UsedTypes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedTypes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsedTypesAccess().getAlternatives_0()); }
	(rule__UsedTypes__Alternatives_0)
	{ after(grammarAccess.getUsedTypesAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedTypes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsedTypes__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedTypes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsedTypesAccess().getTypesAssignment_1()); }
	(rule__UsedTypes__TypesAssignment_1)*
	{ after(grammarAccess.getUsedTypesAccess().getTypesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UsedTypes__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsedTypes__Group_0_0__0__Impl
	rule__UsedTypes__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedTypes__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsedTypesAccess().getUsedKeyword_0_0_0()); }
	'used'
	{ after(grammarAccess.getUsedTypesAccess().getUsedKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedTypes__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsedTypes__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedTypes__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsedTypesAccess().getTypesKeyword_0_0_1()); }
	'types:'
	{ after(grammarAccess.getUsedTypesAccess().getTypesKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UsedTypes__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsedTypes__Group_0_1__0__Impl
	rule__UsedTypes__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedTypes__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsedTypesAccess().getGenutzteKeyword_0_1_0()); }
	'Genutzte'
	{ after(grammarAccess.getUsedTypesAccess().getGenutzteKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedTypes__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsedTypes__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedTypes__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsedTypesAccess().getTypenKeyword_0_1_1()); }
	'Typen:'
	{ after(grammarAccess.getUsedTypesAccess().getTypenKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getTypeAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNameAssignment_1()); }
	(rule__Type__NameAssignment_1)
	{ after(grammarAccess.getTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__2__Impl
	rule__Type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__3__Impl
	rule__Type__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getDescriptionAssignment_3()); }
	(rule__Type__DescriptionAssignment_3)
	{ after(grammarAccess.getTypeAccess().getDescriptionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__4__Impl
	rule__Type__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getGroup_5()); }
	(rule__Type__Group_5__0)?
	{ after(grammarAccess.getTypeAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_5__0__Impl
	rule__Type__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_5_0()); }
	'['
	{ after(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_5__1__Impl
	rule__Type__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getImportInfoAssignment_5_1()); }
	(rule__Type__ImportInfoAssignment_5_1)
	{ after(grammarAccess.getTypeAccess().getImportInfoAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_5_2()); }
	']'
	{ after(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UsedExceptions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsedExceptions__Group__0__Impl
	rule__UsedExceptions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedExceptions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsedExceptionsAccess().getAlternatives_0()); }
	(rule__UsedExceptions__Alternatives_0)
	{ after(grammarAccess.getUsedExceptionsAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedExceptions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsedExceptions__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedExceptions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsedExceptionsAccess().getExceptionsAssignment_1()); }
	(rule__UsedExceptions__ExceptionsAssignment_1)*
	{ after(grammarAccess.getUsedExceptionsAccess().getExceptionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UsedExceptions__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsedExceptions__Group_0_0__0__Impl
	rule__UsedExceptions__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedExceptions__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsedExceptionsAccess().getUsedKeyword_0_0_0()); }
	'used'
	{ after(grammarAccess.getUsedExceptionsAccess().getUsedKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedExceptions__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsedExceptions__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedExceptions__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsedExceptionsAccess().getErrorsKeyword_0_0_1()); }
	'errors:'
	{ after(grammarAccess.getUsedExceptionsAccess().getErrorsKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UsedExceptions__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsedExceptions__Group_0_1__0__Impl
	rule__UsedExceptions__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedExceptions__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsedExceptionsAccess().getGenutzteKeyword_0_1_0()); }
	'Genutzte'
	{ after(grammarAccess.getUsedExceptionsAccess().getGenutzteKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedExceptions__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsedExceptions__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedExceptions__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsedExceptionsAccess().getFehlerKeyword_0_1_1()); }
	'Fehler:'
	{ after(grammarAccess.getUsedExceptionsAccess().getFehlerKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExceptionDecleration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDecleration__Group__0__Impl
	rule__ExceptionDecleration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclerationAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getExceptionDeclerationAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDecleration__Group__1__Impl
	rule__ExceptionDecleration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclerationAccess().getNameAssignment_1()); }
	(rule__ExceptionDecleration__NameAssignment_1)
	{ after(grammarAccess.getExceptionDeclerationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDecleration__Group__2__Impl
	rule__ExceptionDecleration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclerationAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getExceptionDeclerationAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDecleration__Group__3__Impl
	rule__ExceptionDecleration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclerationAccess().getMessageAssignment_3()); }
	(rule__ExceptionDecleration__MessageAssignment_3)
	{ after(grammarAccess.getExceptionDeclerationAccess().getMessageAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDecleration__Group__4__Impl
	rule__ExceptionDecleration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclerationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getExceptionDeclerationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDecleration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclerationAccess().getGroup_5()); }
	(rule__ExceptionDecleration__Group_5__0)?
	{ after(grammarAccess.getExceptionDeclerationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExceptionDecleration__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDecleration__Group_5__0__Impl
	rule__ExceptionDecleration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclerationAccess().getLeftSquareBracketKeyword_5_0()); }
	'['
	{ after(grammarAccess.getExceptionDeclerationAccess().getLeftSquareBracketKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDecleration__Group_5__1__Impl
	rule__ExceptionDecleration__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclerationAccess().getImportInfoAssignment_5_1()); }
	(rule__ExceptionDecleration__ImportInfoAssignment_5_1)
	{ after(grammarAccess.getExceptionDeclerationAccess().getImportInfoAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionDecleration__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionDeclerationAccess().getRightSquareBracketKeyword_5_2()); }
	']'
	{ after(grammarAccess.getExceptionDeclerationAccess().getRightSquareBracketKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__CompanyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getCompanyQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getModelAccess().getCompanyQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PackageAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPackagePackageParserRuleCall_2_0()); }
		rulePackage
		{ after(grammarAccess.getModelAccess().getPackagePackageParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UseCasesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getUseCasesUseCaseParserRuleCall_3_0()); }
		ruleUseCase
		{ after(grammarAccess.getModelAccess().getUseCasesUseCaseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TypesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTypesUsedTypesParserRuleCall_4_0()); }
		ruleUsedTypes
		{ after(grammarAccess.getModelAccess().getTypesUsedTypesParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ExceptionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getExceptionsUsedExceptionsParserRuleCall_5_0()); }
		ruleUsedExceptions
		{ after(grammarAccess.getModelAccess().getExceptionsUsedExceptionsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__PartsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getPartsPackagePartParserRuleCall_1_0()); }
		rulePackagePart
		{ after(grammarAccess.getPackageAccess().getPartsPackagePartParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__PartsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getPartsPackagePartParserRuleCall_2_1_0()); }
		rulePackagePart
		{ after(grammarAccess.getPackageAccess().getPartsPackagePartParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackagePart__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackagePartAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getPackagePartAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getUseCaseAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__DescriptionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getDescriptionsDescriptionParserRuleCall_2_0()); }
		ruleDescription
		{ after(grammarAccess.getUseCaseAccess().getDescriptionsDescriptionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__AllowedUserGroupsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getAllowedUserGroupsAllowedUserGroupsParserRuleCall_3_0()); }
		ruleAllowedUserGroups
		{ after(grammarAccess.getUseCaseAccess().getAllowedUserGroupsAllowedUserGroupsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__InputsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getInputsInputsParserRuleCall_4_0()); }
		ruleInputs
		{ after(grammarAccess.getUseCaseAccess().getInputsInputsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__OutputsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getOutputsOutputsParserRuleCall_5_0()); }
		ruleOutputs
		{ after(grammarAccess.getUseCaseAccess().getOutputsOutputsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__PreconditionsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getPreconditionsPreConditionsParserRuleCall_6_0()); }
		rulePreConditions
		{ after(grammarAccess.getUseCaseAccess().getPreconditionsPreConditionsParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__StepsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getStepsStepsParserRuleCall_7_0()); }
		ruleSteps
		{ after(grammarAccess.getUseCaseAccess().getStepsStepsParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__NotesAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getNotesNotesParserRuleCall_8_0()); }
		ruleNotes
		{ after(grammarAccess.getUseCaseAccess().getNotesNotesParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDescriptionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDescriptionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroups__GroupsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAllowedUserGroupsAccess().getGroupsAllowedUserGroupParserRuleCall_1_0()); }
		ruleAllowedUserGroup
		{ after(grammarAccess.getAllowedUserGroupsAccess().getGroupsAllowedUserGroupParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroup__ManyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAllowedUserGroupAccess().getManyManyKeyword_0_0()); }
		(
			{ before(grammarAccess.getAllowedUserGroupAccess().getManyManyKeyword_0_0()); }
			'many'
			{ after(grammarAccess.getAllowedUserGroupAccess().getManyManyKeyword_0_0()); }
		)
		{ after(grammarAccess.getAllowedUserGroupAccess().getManyManyKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroup__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAllowedUserGroupAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getAllowedUserGroupAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowedUserGroup__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAllowedUserGroupAccess().getTypeTypeCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getAllowedUserGroupAccess().getTypeTypeIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAllowedUserGroupAccess().getTypeTypeIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getAllowedUserGroupAccess().getTypeTypeCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inputs__InputsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputsAccess().getInputsInputParserRuleCall_1_0()); }
		ruleInput
		{ after(grammarAccess.getInputsAccess().getInputsInputParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__ManyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getManyManyKeyword_0_0()); }
		(
			{ before(grammarAccess.getInputAccess().getManyManyKeyword_0_0()); }
			'many'
			{ after(grammarAccess.getInputAccess().getManyManyKeyword_0_0()); }
		)
		{ after(grammarAccess.getInputAccess().getManyManyKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__OptionalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getOptionalOptionalParserRuleCall_2_0()); }
		ruleOptional
		{ after(grammarAccess.getInputAccess().getOptionalOptionalParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__ContentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getContentSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getInputAccess().getContentSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getTypeTypeCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getInputAccess().getTypeTypeIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInputAccess().getTypeTypeIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getInputAccess().getTypeTypeCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__ExampleAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getExampleSTRINGTerminalRuleCall_5_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getInputAccess().getExampleSTRINGTerminalRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outputs__OutputsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputsAccess().getOutputsOutputParserRuleCall_1_0()); }
		ruleOutput
		{ after(grammarAccess.getOutputsAccess().getOutputsOutputParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__ManyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getManyManyKeyword_0_0()); }
		(
			{ before(grammarAccess.getOutputAccess().getManyManyKeyword_0_0()); }
			'many'
			{ after(grammarAccess.getOutputAccess().getManyManyKeyword_0_0()); }
		)
		{ after(grammarAccess.getOutputAccess().getManyManyKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getContentSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getOutputAccess().getContentSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getTypeTypeCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getOutputAccess().getTypeTypeIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOutputAccess().getTypeTypeIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getOutputAccess().getTypeTypeCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__ExampleAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getExampleSTRINGTerminalRuleCall_4_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getOutputAccess().getExampleSTRINGTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreConditions__ConditionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreConditionsAccess().getConditionsConditionParserRuleCall_1_0()); }
		ruleCondition
		{ after(grammarAccess.getPreConditionsAccess().getConditionsConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ContentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getContentSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getConditionAccess().getContentSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Steps__StepsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepsAccess().getStepsStepParserRuleCall_1_0()); }
		ruleStep
		{ after(grammarAccess.getStepsAccess().getStepsStepParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__NumberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getNumberQualifiedNumberParserRuleCall_0_0()); }
		ruleQualifiedNumber
		{ after(grammarAccess.getStepAccess().getNumberQualifiedNumberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__ActionAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getActionSTRINGTerminalRuleCall_1_0_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getStepAccess().getActionSTRINGTerminalRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__ErrorAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getErrorRaiseErrorConditionalParserRuleCall_1_0_1_0()); }
		ruleRaiseErrorConditional
		{ after(grammarAccess.getStepAccess().getErrorRaiseErrorConditionalParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__ErrorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getErrorRaiseErrorConditionalParserRuleCall_1_1_0()); }
		ruleRaiseErrorConditional
		{ after(grammarAccess.getStepAccess().getErrorRaiseErrorConditionalParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__ConditionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getConditionIfStatementParserRuleCall_1_2_0()); }
		ruleIfStatement
		{ after(grammarAccess.getStepAccess().getConditionIfStatementParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__LoopAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getLoopLoopParserRuleCall_1_3_0()); }
		ruleLoop
		{ after(grammarAccess.getStepAccess().getLoopLoopParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__ExceptionAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getExceptionRaiseErrorNowParserRuleCall_1_4_0()); }
		ruleRaiseErrorNow
		{ after(grammarAccess.getStepAccess().getExceptionRaiseErrorNowParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorConditional__ExceptionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaiseErrorConditionalAccess().getExceptionExceptionParserRuleCall_2_0()); }
		ruleException
		{ after(grammarAccess.getRaiseErrorConditionalAccess().getExceptionExceptionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RaiseErrorNow__ExceptionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaiseErrorNowAccess().getExceptionExceptionParserRuleCall_1_0()); }
		ruleException
		{ after(grammarAccess.getRaiseErrorNowAccess().getExceptionExceptionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getConditionBooleanConditionParserRuleCall_1_0()); }
		ruleBooleanCondition
		{ after(grammarAccess.getIfStatementAccess().getConditionBooleanConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getConditionBooleanConditionParserRuleCall_1_0()); }
		ruleBooleanCondition
		{ after(grammarAccess.getLoopAccess().getConditionBooleanConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanCondition__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanConditionAccess().getNameSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getBooleanConditionAccess().getNameSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Notes__ContentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotesAccess().getContentSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getNotesAccess().getContentSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedTypes__TypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUsedTypesAccess().getTypesTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getUsedTypesAccess().getTypesTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DescriptionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getTypeAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ImportInfoAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getImportInfoQualifiedNameParserRuleCall_5_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getTypeAccess().getImportInfoQualifiedNameParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsedExceptions__ExceptionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUsedExceptionsAccess().getExceptionsExceptionDeclerationParserRuleCall_1_0()); }
		ruleExceptionDecleration
		{ after(grammarAccess.getUsedExceptionsAccess().getExceptionsExceptionDeclerationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionAccess().getTypeExceptionDeclerationCrossReference_0()); }
		(
			{ before(grammarAccess.getExceptionAccess().getTypeExceptionDeclerationIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExceptionAccess().getTypeExceptionDeclerationIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getExceptionAccess().getTypeExceptionDeclerationCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionDeclerationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExceptionDeclerationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__MessageAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionDeclerationAccess().getMessageSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getExceptionDeclerationAccess().getMessageSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionDecleration__ImportInfoAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionDeclerationAccess().getImportInfoQualifiedNameParserRuleCall_5_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getExceptionDeclerationAccess().getImportInfoQualifiedNameParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
