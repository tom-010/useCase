/*
 * generated by Xtext 2.13.0
 */
grammar InternalUseCase;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package io.deniffel.dsl.useCase.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package io.deniffel.dsl.useCase.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import io.deniffel.dsl.useCase.services.UseCaseGrammarAccess;

}

@parser::members {

 	private UseCaseGrammarAccess grammarAccess;

    public InternalUseCaseParser(TokenStream input, UseCaseGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected UseCaseGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Firma'
			{
				newLeafNode(otherlv_0, grammarAccess.getModelAccess().getFirmaKeyword_0_0());
			}
			    |
			otherlv_1='Company'
			{
				newLeafNode(otherlv_1, grammarAccess.getModelAccess().getCompanyKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getCompanyQualifiedNameParserRuleCall_1_0());
				}
				lv_company_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"company",
						lv_company_2_0,
						"io.deniffel.dsl.useCase.UseCase.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getPackagePackageParserRuleCall_2_0());
				}
				lv_package_3_0=rulePackage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"package",
						lv_package_3_0,
						"io.deniffel.dsl.useCase.UseCase.Package");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getUseCasesUseCaseParserRuleCall_3_0());
				}
				lv_useCases_4_0=ruleUseCase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"useCases",
						lv_useCases_4_0,
						"io.deniffel.dsl.useCase.UseCase.UseCase");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getTypesUsedTypesParserRuleCall_4_0());
				}
				lv_types_5_0=ruleUsedTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"types",
						lv_types_5_0,
						"io.deniffel.dsl.useCase.UseCase.UsedTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getExceptionsUsedExceptionsParserRuleCall_5_0());
				}
				lv_exceptions_6_0=ruleUsedExceptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"exceptions",
						lv_exceptions_6_0,
						"io.deniffel.dsl.useCase.UseCase.UsedExceptions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getExamplesExampleParserRuleCall_6_0());
				}
				lv_examples_7_0=ruleExample
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"examples",
						lv_examples_7_0,
						"io.deniffel.dsl.useCase.UseCase.Example");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleQualifiedNumber
entryRuleQualifiedNumber returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNumberRule()); }
	iv_ruleQualifiedNumber=ruleQualifiedNumber
	{ $current=$iv_ruleQualifiedNumber.current.getText(); }
	EOF;

// Rule QualifiedNumber
ruleQualifiedNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getQualifiedNumberAccess().getINTTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNumberAccess().getFullStopKeyword_1_0());
			}
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getQualifiedNumberAccess().getINTTerminalRuleCall_1_1());
			}
		)*
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedNumberAccess().getFullStopKeyword_2());
		}
	)
;

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Kathegorie'
			{
				newLeafNode(otherlv_0, grammarAccess.getPackageAccess().getKathegorieKeyword_0_0());
			}
			    |
			otherlv_1='package'
			{
				newLeafNode(otherlv_1, grammarAccess.getPackageAccess().getPackageKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageAccess().getPartsPackagePartParserRuleCall_1_0());
				}
				lv_parts_2_0=rulePackagePart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageRule());
					}
					add(
						$current,
						"parts",
						lv_parts_2_0,
						"io.deniffel.dsl.useCase.UseCase.PackagePart");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='>'
			{
				newLeafNode(otherlv_3, grammarAccess.getPackageAccess().getGreaterThanSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageAccess().getPartsPackagePartParserRuleCall_2_1_0());
					}
					lv_parts_4_0=rulePackagePart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageRule());
						}
						add(
							$current,
							"parts",
							lv_parts_4_0,
							"io.deniffel.dsl.useCase.UseCase.PackagePart");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePackagePart
entryRulePackagePart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackagePartRule()); }
	iv_rulePackagePart=rulePackagePart
	{ $current=$iv_rulePackagePart.current; }
	EOF;

// Rule PackagePart
rulePackagePart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getPackagePartAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPackagePartRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleUseCase
entryRuleUseCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUseCaseRule()); }
	iv_ruleUseCase=ruleUseCase
	{ $current=$iv_ruleUseCase.current; }
	EOF;

// Rule UseCase
ruleUseCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='use-case'
			{
				newLeafNode(otherlv_0, grammarAccess.getUseCaseAccess().getUseCaseKeyword_0_0());
			}
			    |
			otherlv_1='Rezept'
			{
				newLeafNode(otherlv_1, grammarAccess.getUseCaseAccess().getRezeptKeyword_0_1());
			}
		)
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getUseCaseAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUseCaseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getDescriptionsDescriptionParserRuleCall_2_0());
				}
				lv_descriptions_3_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					add(
						$current,
						"descriptions",
						lv_descriptions_3_0,
						"io.deniffel.dsl.useCase.UseCase.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getAllowedUserGroupsAllowedUserGroupsParserRuleCall_3_0());
				}
				lv_allowedUserGroups_4_0=ruleAllowedUserGroups
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					add(
						$current,
						"allowedUserGroups",
						lv_allowedUserGroups_4_0,
						"io.deniffel.dsl.useCase.UseCase.AllowedUserGroups");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getInputsInputsParserRuleCall_4_0());
				}
				lv_inputs_5_0=ruleInputs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_5_0,
						"io.deniffel.dsl.useCase.UseCase.Inputs");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getOptionalInputsOptionalInputsParserRuleCall_5_0());
				}
				lv_optionalInputs_6_0=ruleOptionalInputs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					add(
						$current,
						"optionalInputs",
						lv_optionalInputs_6_0,
						"io.deniffel.dsl.useCase.UseCase.OptionalInputs");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getOutputsOutputsParserRuleCall_6_0());
				}
				lv_outputs_7_0=ruleOutputs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					add(
						$current,
						"outputs",
						lv_outputs_7_0,
						"io.deniffel.dsl.useCase.UseCase.Outputs");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getPreconditionsPreConditionsParserRuleCall_7_0());
				}
				lv_preconditions_8_0=rulePreConditions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					set(
						$current,
						"preconditions",
						lv_preconditions_8_0,
						"io.deniffel.dsl.useCase.UseCase.PreConditions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getStepsStepsParserRuleCall_8_0());
				}
				lv_steps_9_0=ruleSteps
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					add(
						$current,
						"steps",
						lv_steps_9_0,
						"io.deniffel.dsl.useCase.UseCase.Steps");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUseCaseAccess().getNotesNotesParserRuleCall_9_0());
				}
				lv_notes_10_0=ruleNotes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUseCaseRule());
					}
					add(
						$current,
						"notes",
						lv_notes_10_0,
						"io.deniffel.dsl.useCase.UseCase.Notes");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				otherlv_11='end'
				{
					newLeafNode(otherlv_11, grammarAccess.getUseCaseAccess().getEndKeyword_10_0_0());
				}
				otherlv_12='of'
				{
					newLeafNode(otherlv_12, grammarAccess.getUseCaseAccess().getOfKeyword_10_0_1());
				}
				otherlv_13='use-case'
				{
					newLeafNode(otherlv_13, grammarAccess.getUseCaseAccess().getUseCaseKeyword_10_0_2());
				}
			)
			    |
			(
				otherlv_14='Ende'
				{
					newLeafNode(otherlv_14, grammarAccess.getUseCaseAccess().getEndeKeyword_10_1_0());
				}
				otherlv_15='des'
				{
					newLeafNode(otherlv_15, grammarAccess.getUseCaseAccess().getDesKeyword_10_1_1());
				}
				otherlv_16='Rezpets'
				{
					newLeafNode(otherlv_16, grammarAccess.getUseCaseAccess().getRezpetsKeyword_10_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleDescription
entryRuleDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDescriptionRule()); }
	iv_ruleDescription=ruleDescription
	{ $current=$iv_ruleDescription.current; }
	EOF;

// Rule Description
ruleDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='description:'
			{
				newLeafNode(otherlv_0, grammarAccess.getDescriptionAccess().getDescriptionKeyword_0_0());
			}
			    |
			otherlv_1='Kurzbeschreibung:'
			{
				newLeafNode(otherlv_1, grammarAccess.getDescriptionAccess().getKurzbeschreibungKeyword_0_1());
			}
			    |
			otherlv_2='Beschreibung'
			{
				newLeafNode(otherlv_2, grammarAccess.getDescriptionAccess().getBeschreibungKeyword_0_2());
			}
		)
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getDescriptionAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAllowedUserGroups
entryRuleAllowedUserGroups returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAllowedUserGroupsRule()); }
	iv_ruleAllowedUserGroups=ruleAllowedUserGroups
	{ $current=$iv_ruleAllowedUserGroups.current; }
	EOF;

// Rule AllowedUserGroups
ruleAllowedUserGroups returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='allowed-usergroups:'
			{
				newLeafNode(otherlv_0, grammarAccess.getAllowedUserGroupsAccess().getAllowedUsergroupsKeyword_0_0());
			}
			    |
			(
				otherlv_1='Erlaubt'
				{
					newLeafNode(otherlv_1, grammarAccess.getAllowedUserGroupsAccess().getErlaubtKeyword_0_1_0());
				}
				otherlv_2='f\u00FCr:'
				{
					newLeafNode(otherlv_2, grammarAccess.getAllowedUserGroupsAccess().getFürKeyword_0_1_1());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAllowedUserGroupsAccess().getGroupsAllowedUserGroupParserRuleCall_1_0());
				}
				lv_groups_3_0=ruleAllowedUserGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAllowedUserGroupsRule());
					}
					add(
						$current,
						"groups",
						lv_groups_3_0,
						"io.deniffel.dsl.useCase.UseCase.AllowedUserGroup");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAllowedUserGroup
entryRuleAllowedUserGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAllowedUserGroupRule()); }
	iv_ruleAllowedUserGroup=ruleAllowedUserGroup
	{ $current=$iv_ruleAllowedUserGroup.current; }
	EOF;

// Rule AllowedUserGroup
ruleAllowedUserGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_many_0_0='many'
				{
					newLeafNode(lv_many_0_0, grammarAccess.getAllowedUserGroupAccess().getManyManyKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAllowedUserGroupRule());
					}
					setWithLastConsumed($current, "many", true, "many");
				}
			)
		)?
		otherlv_1='-'
		{
			newLeafNode(otherlv_1, grammarAccess.getAllowedUserGroupAccess().getHyphenMinusKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getAllowedUserGroupAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAllowedUserGroupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_3='as'
			{
				newLeafNode(otherlv_3, grammarAccess.getAllowedUserGroupAccess().getAsKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAllowedUserGroupRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getAllowedUserGroupAccess().getTypeTypeCrossReference_3_1_0());
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleInputs
entryRuleInputs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputsRule()); }
	iv_ruleInputs=ruleInputs
	{ $current=$iv_ruleInputs.current; }
	EOF;

// Rule Inputs
ruleInputs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='requires:'
				{
					newLeafNode(otherlv_0, grammarAccess.getInputsAccess().getRequiresKeyword_0_0_0());
				}
				    |
				otherlv_1='require:'
				{
					newLeafNode(otherlv_1, grammarAccess.getInputsAccess().getRequireKeyword_0_0_1());
				}
				    |
				(
					otherlv_2='requires'
					{
						newLeafNode(otherlv_2, grammarAccess.getInputsAccess().getRequiresKeyword_0_0_2_0());
					}
					otherlv_3='the'
					{
						newLeafNode(otherlv_3, grammarAccess.getInputsAccess().getTheKeyword_0_0_2_1());
					}
					otherlv_4='following'
					{
						newLeafNode(otherlv_4, grammarAccess.getInputsAccess().getFollowingKeyword_0_0_2_2());
					}
					otherlv_5='input'
					{
						newLeafNode(otherlv_5, grammarAccess.getInputsAccess().getInputKeyword_0_0_2_3());
					}
					otherlv_6=':'
					{
						newLeafNode(otherlv_6, grammarAccess.getInputsAccess().getColonKeyword_0_0_2_4());
					}
				)
			)
			    |
			(
				otherlv_7='Ben\u00F6tigte'
				{
					newLeafNode(otherlv_7, grammarAccess.getInputsAccess().getBenötigteKeyword_0_1_0());
				}
				otherlv_8='Zutaten'
				{
					newLeafNode(otherlv_8, grammarAccess.getInputsAccess().getZutatenKeyword_0_1_1());
				}
				otherlv_9=':'
				{
					newLeafNode(otherlv_9, grammarAccess.getInputsAccess().getColonKeyword_0_1_2());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInputsAccess().getInputsInputParserRuleCall_1_0());
				}
				lv_inputs_10_0=ruleInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputsRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_10_0,
						"io.deniffel.dsl.useCase.UseCase.Input");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleOptionalInputs
entryRuleOptionalInputs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionalInputsRule()); }
	iv_ruleOptionalInputs=ruleOptionalInputs
	{ $current=$iv_ruleOptionalInputs.current; }
	EOF;

// Rule OptionalInputs
ruleOptionalInputs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='optional:'
				{
					newLeafNode(otherlv_0, grammarAccess.getOptionalInputsAccess().getOptionalKeyword_0_0_0());
				}
				    |
				(
					otherlv_1='optional'
					{
						newLeafNode(otherlv_1, grammarAccess.getOptionalInputsAccess().getOptionalKeyword_0_0_1_0());
					}
					otherlv_2='inputs'
					{
						newLeafNode(otherlv_2, grammarAccess.getOptionalInputsAccess().getInputsKeyword_0_0_1_1());
					}
					otherlv_3=':'
					{
						newLeafNode(otherlv_3, grammarAccess.getOptionalInputsAccess().getColonKeyword_0_0_1_2());
					}
				)
			)
			    |
			(
				(
					(
						otherlv_4='Optionale'
						{
							newLeafNode(otherlv_4, grammarAccess.getOptionalInputsAccess().getOptionaleKeyword_0_1_0_0_0());
						}
						otherlv_5='Zutaten'
						{
							newLeafNode(otherlv_5, grammarAccess.getOptionalInputsAccess().getZutatenKeyword_0_1_0_0_1());
						}
					)
					    |
					otherlv_6='Optional'
					{
						newLeafNode(otherlv_6, grammarAccess.getOptionalInputsAccess().getOptionalKeyword_0_1_0_1());
					}
				)
				otherlv_7=':'
				{
					newLeafNode(otherlv_7, grammarAccess.getOptionalInputsAccess().getColonKeyword_0_1_1());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOptionalInputsAccess().getInputsInputParserRuleCall_1_0());
				}
				lv_inputs_8_0=ruleInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOptionalInputsRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_8_0,
						"io.deniffel.dsl.useCase.UseCase.Input");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_many_0_0='many'
				{
					newLeafNode(lv_many_0_0, grammarAccess.getInputAccess().getManyManyKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputRule());
					}
					setWithLastConsumed($current, "many", true, "many");
				}
			)
		)?
		otherlv_1='-'
		{
			newLeafNode(otherlv_1, grammarAccess.getInputAccess().getHyphenMinusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputAccess().getOptionalOptionalParserRuleCall_2_0());
				}
				lv_optional_2_0=ruleOptional
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputRule());
					}
					set(
						$current,
						"optional",
						lv_optional_2_0,
						"io.deniffel.dsl.useCase.UseCase.Optional");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_content_3_0=RULE_STRING
				{
					newLeafNode(lv_content_3_0, grammarAccess.getInputAccess().getContentSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				otherlv_4='as'
				{
					newLeafNode(otherlv_4, grammarAccess.getInputAccess().getAsKeyword_4_0_0());
				}
				    |
				otherlv_5='als'
				{
					newLeafNode(otherlv_5, grammarAccess.getInputAccess().getAlsKeyword_4_0_1());
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getInputAccess().getTypeTypeCrossReference_4_1_0());
					}
				)
			)
		)?
		(
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getInputAccess().getLeftParenthesisKeyword_5_0());
			}
			(
				otherlv_8='e.g'
				{
					newLeafNode(otherlv_8, grammarAccess.getInputAccess().getEGKeyword_5_1_0());
				}
				    |
				otherlv_9='z.B.'
				{
					newLeafNode(otherlv_9, grammarAccess.getInputAccess().getZBKeyword_5_1_1());
				}
			)
			(
				(
					lv_example_10_0=RULE_STRING
					{
						newLeafNode(lv_example_10_0, grammarAccess.getInputAccess().getExampleSTRINGTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputRule());
						}
						setWithLastConsumed(
							$current,
							"example",
							lv_example_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getInputAccess().getRightParenthesisKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleOutputs
entryRuleOutputs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputsRule()); }
	iv_ruleOutputs=ruleOutputs
	{ $current=$iv_ruleOutputs.current; }
	EOF;

// Rule Outputs
ruleOutputs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='produces:'
				{
					newLeafNode(otherlv_0, grammarAccess.getOutputsAccess().getProducesKeyword_0_0_0());
				}
				    |
				otherlv_1='produce:'
				{
					newLeafNode(otherlv_1, grammarAccess.getOutputsAccess().getProduceKeyword_0_0_1());
				}
				    |
				(
					otherlv_2='produces'
					{
						newLeafNode(otherlv_2, grammarAccess.getOutputsAccess().getProducesKeyword_0_0_2_0());
					}
					otherlv_3='the'
					{
						newLeafNode(otherlv_3, grammarAccess.getOutputsAccess().getTheKeyword_0_0_2_1());
					}
					otherlv_4='following'
					{
						newLeafNode(otherlv_4, grammarAccess.getOutputsAccess().getFollowingKeyword_0_0_2_2());
					}
					otherlv_5='output'
					{
						newLeafNode(otherlv_5, grammarAccess.getOutputsAccess().getOutputKeyword_0_0_2_3());
					}
					otherlv_6=':'
					{
						newLeafNode(otherlv_6, grammarAccess.getOutputsAccess().getColonKeyword_0_0_2_4());
					}
				)
			)
			    |
			otherlv_7='Ergebnis:'
			{
				newLeafNode(otherlv_7, grammarAccess.getOutputsAccess().getErgebnisKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputsAccess().getOutputsOutputParserRuleCall_1_0());
				}
				lv_outputs_8_0=ruleOutput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputsRule());
					}
					add(
						$current,
						"outputs",
						lv_outputs_8_0,
						"io.deniffel.dsl.useCase.UseCase.Output");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleOutput
entryRuleOutput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputRule()); }
	iv_ruleOutput=ruleOutput
	{ $current=$iv_ruleOutput.current; }
	EOF;

// Rule Output
ruleOutput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_many_0_0='many'
				{
					newLeafNode(lv_many_0_0, grammarAccess.getOutputAccess().getManyManyKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutputRule());
					}
					setWithLastConsumed($current, "many", true, "many");
				}
			)
		)?
		otherlv_1='-'
		{
			newLeafNode(otherlv_1, grammarAccess.getOutputAccess().getHyphenMinusKeyword_1());
		}
		(
			(
				lv_content_2_0=RULE_STRING
				{
					newLeafNode(lv_content_2_0, grammarAccess.getOutputAccess().getContentSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutputRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				otherlv_3='as'
				{
					newLeafNode(otherlv_3, grammarAccess.getOutputAccess().getAsKeyword_3_0_0());
				}
				    |
				otherlv_4='als'
				{
					newLeafNode(otherlv_4, grammarAccess.getOutputAccess().getAlsKeyword_3_0_1());
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getOutputAccess().getTypeTypeCrossReference_3_1_0());
					}
				)
			)
		)?
		(
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getOutputAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				otherlv_7='e.g'
				{
					newLeafNode(otherlv_7, grammarAccess.getOutputAccess().getEGKeyword_4_1_0());
				}
				    |
				otherlv_8='z.B.'
				{
					newLeafNode(otherlv_8, grammarAccess.getOutputAccess().getZBKeyword_4_1_1());
				}
			)
			(
				(
					lv_example_9_0=RULE_STRING
					{
						newLeafNode(lv_example_9_0, grammarAccess.getOutputAccess().getExampleSTRINGTerminalRuleCall_4_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputRule());
						}
						setWithLastConsumed(
							$current,
							"example",
							lv_example_9_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getOutputAccess().getRightParenthesisKeyword_4_3());
			}
		)?
	)
;

// Entry rule entryRuleOptional
entryRuleOptional returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOptionalRule()); }
	iv_ruleOptional=ruleOptional
	{ $current=$iv_ruleOptional.current.getText(); }
	EOF;

// Rule Optional
ruleOptional returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='optional'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOptionalAccess().getOptionalKeyword());
	}
;

// Entry rule entryRulePreConditions
entryRulePreConditions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreConditionsRule()); }
	iv_rulePreConditions=rulePreConditions
	{ $current=$iv_rulePreConditions.current; }
	EOF;

// Rule PreConditions
rulePreConditions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='pre-condition:'
				{
					newLeafNode(otherlv_0, grammarAccess.getPreConditionsAccess().getPreConditionKeyword_0_0_0());
				}
				    |
				otherlv_1='pre-conditions:'
				{
					newLeafNode(otherlv_1, grammarAccess.getPreConditionsAccess().getPreConditionsKeyword_0_0_1());
				}
			)
			    |
			otherlv_2='Vorbedingungen:'
			{
				newLeafNode(otherlv_2, grammarAccess.getPreConditionsAccess().getVorbedingungenKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPreConditionsAccess().getConditionsConditionParserRuleCall_1_0());
				}
				lv_conditions_3_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPreConditionsRule());
					}
					add(
						$current,
						"conditions",
						lv_conditions_3_0,
						"io.deniffel.dsl.useCase.UseCase.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='-'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getHyphenMinusKeyword_0());
		}
		(
			(
				lv_content_1_0=RULE_STRING
				{
					newLeafNode(lv_content_1_0, grammarAccess.getConditionAccess().getContentSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSteps
entryRuleSteps returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepsRule()); }
	iv_ruleSteps=ruleSteps
	{ $current=$iv_ruleSteps.current; }
	EOF;

// Rule Steps
ruleSteps returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='steps:'
			{
				newLeafNode(otherlv_0, grammarAccess.getStepsAccess().getStepsKeyword_0_0());
			}
			    |
			otherlv_1='Schritte:'
			{
				newLeafNode(otherlv_1, grammarAccess.getStepsAccess().getSchritteKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStepsAccess().getStepsStepParserRuleCall_1_0());
				}
				lv_steps_2_0=ruleStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepsRule());
					}
					add(
						$current,
						"steps",
						lv_steps_2_0,
						"io.deniffel.dsl.useCase.UseCase.Step");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleStep
entryRuleStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepRule()); }
	iv_ruleStep=ruleStep
	{ $current=$iv_ruleStep.current; }
	EOF;

// Rule Step
ruleStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStepAccess().getNumberQualifiedNumberParserRuleCall_0_0());
				}
				lv_number_0_0=ruleQualifiedNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepRule());
					}
					set(
						$current,
						"number",
						lv_number_0_0,
						"io.deniffel.dsl.useCase.UseCase.QualifiedNumber");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						lv_action_1_0=RULE_STRING
						{
							newLeafNode(lv_action_1_0, grammarAccess.getStepAccess().getActionSTRINGTerminalRuleCall_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getStepRule());
							}
							setWithLastConsumed(
								$current,
								"action",
								lv_action_1_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getStepAccess().getErrorRaiseErrorConditionalParserRuleCall_1_0_1_0());
						}
						lv_error_2_0=ruleRaiseErrorConditional
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStepRule());
							}
							set(
								$current,
								"error",
								lv_error_2_0,
								"io.deniffel.dsl.useCase.UseCase.RaiseErrorConditional");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStepAccess().getErrorRaiseErrorConditionalParserRuleCall_1_1_0());
					}
					lv_error_3_0=ruleRaiseErrorConditional
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStepRule());
						}
						set(
							$current,
							"error",
							lv_error_3_0,
							"io.deniffel.dsl.useCase.UseCase.RaiseErrorConditional");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStepAccess().getConditionIfStatementParserRuleCall_1_2_0());
					}
					lv_condition_4_0=ruleIfStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStepRule());
						}
						set(
							$current,
							"condition",
							lv_condition_4_0,
							"io.deniffel.dsl.useCase.UseCase.IfStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStepAccess().getLoopLoopParserRuleCall_1_3_0());
					}
					lv_loop_5_0=ruleLoop
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStepRule());
						}
						set(
							$current,
							"loop",
							lv_loop_5_0,
							"io.deniffel.dsl.useCase.UseCase.Loop");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStepAccess().getExceptionRaiseErrorNowParserRuleCall_1_4_0());
					}
					lv_exception_6_0=ruleRaiseErrorNow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStepRule());
						}
						set(
							$current,
							"exception",
							lv_exception_6_0,
							"io.deniffel.dsl.useCase.UseCase.RaiseErrorNow");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleRaiseErrorConditional
entryRuleRaiseErrorConditional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRaiseErrorConditionalRule()); }
	iv_ruleRaiseErrorConditional=ruleRaiseErrorConditional
	{ $current=$iv_ruleRaiseErrorConditional.current; }
	EOF;

// Rule RaiseErrorConditional
ruleRaiseErrorConditional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='.'
			{
				newLeafNode(otherlv_0, grammarAccess.getRaiseErrorConditionalAccess().getFullStopKeyword_0_0());
			}
			    |
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getRaiseErrorConditionalAccess().getColonKeyword_0_1());
			}
		)
		(
			(
				otherlv_2='On'
				{
					newLeafNode(otherlv_2, grammarAccess.getRaiseErrorConditionalAccess().getOnKeyword_1_0_0());
				}
				otherlv_3='error'
				{
					newLeafNode(otherlv_3, grammarAccess.getRaiseErrorConditionalAccess().getErrorKeyword_1_0_1());
				}
				otherlv_4='raise'
				{
					newLeafNode(otherlv_4, grammarAccess.getRaiseErrorConditionalAccess().getRaiseKeyword_1_0_2());
				}
			)
			    |
			(
				otherlv_5='Bei'
				{
					newLeafNode(otherlv_5, grammarAccess.getRaiseErrorConditionalAccess().getBeiKeyword_1_1_0());
				}
				otherlv_6='Fehler'
				{
					newLeafNode(otherlv_6, grammarAccess.getRaiseErrorConditionalAccess().getFehlerKeyword_1_1_1());
				}
				otherlv_7='melde'
				{
					newLeafNode(otherlv_7, grammarAccess.getRaiseErrorConditionalAccess().getMeldeKeyword_1_1_2());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRaiseErrorConditionalAccess().getExceptionExceptionParserRuleCall_2_0());
				}
				lv_exception_8_0=ruleException
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRaiseErrorConditionalRule());
					}
					set(
						$current,
						"exception",
						lv_exception_8_0,
						"io.deniffel.dsl.useCase.UseCase.Exception");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRaiseErrorNow
entryRuleRaiseErrorNow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRaiseErrorNowRule()); }
	iv_ruleRaiseErrorNow=ruleRaiseErrorNow
	{ $current=$iv_ruleRaiseErrorNow.current; }
	EOF;

// Rule RaiseErrorNow
ruleRaiseErrorNow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='Raise'
				{
					newLeafNode(otherlv_0, grammarAccess.getRaiseErrorNowAccess().getRaiseKeyword_0_0_0());
				}
				(
					otherlv_1='error'
					{
						newLeafNode(otherlv_1, grammarAccess.getRaiseErrorNowAccess().getErrorKeyword_0_0_1());
					}
				)?
			)
			    |
			(
				otherlv_2='Melde'
				{
					newLeafNode(otherlv_2, grammarAccess.getRaiseErrorNowAccess().getMeldeKeyword_0_1_0());
				}
				(
					otherlv_3='Fehler'
					{
						newLeafNode(otherlv_3, grammarAccess.getRaiseErrorNowAccess().getFehlerKeyword_0_1_1());
					}
				)?
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRaiseErrorNowAccess().getExceptionExceptionParserRuleCall_1_0());
				}
				lv_exception_4_0=ruleException
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRaiseErrorNowRule());
					}
					set(
						$current,
						"exception",
						lv_exception_4_0,
						"io.deniffel.dsl.useCase.UseCase.Exception");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='If'
			{
				newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0_0());
			}
			    |
			otherlv_1='Falls'
			{
				newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getFallsKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getConditionBooleanConditionParserRuleCall_1_0());
				}
				lv_condition_2_0=ruleBooleanCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"io.deniffel.dsl.useCase.UseCase.BooleanCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getColonKeyword_2());
		}
	)
;

// Entry rule entryRuleLoop
entryRuleLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopRule()); }
	iv_ruleLoop=ruleLoop
	{ $current=$iv_ruleLoop.current; }
	EOF;

// Rule Loop
ruleLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Solange'
			{
				newLeafNode(otherlv_0, grammarAccess.getLoopAccess().getSolangeKeyword_0_0());
			}
			    |
			otherlv_1='While'
			{
				newLeafNode(otherlv_1, grammarAccess.getLoopAccess().getWhileKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getConditionBooleanConditionParserRuleCall_1_0());
				}
				lv_condition_2_0=ruleBooleanCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"io.deniffel.dsl.useCase.UseCase.BooleanCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getLoopAccess().getColonKeyword_2());
		}
	)
;

// Entry rule entryRuleBooleanCondition
entryRuleBooleanCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanConditionRule()); }
	iv_ruleBooleanCondition=ruleBooleanCondition
	{ $current=$iv_ruleBooleanCondition.current; }
	EOF;

// Rule BooleanCondition
ruleBooleanCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_STRING
			{
				newLeafNode(lv_name_0_0, grammarAccess.getBooleanConditionAccess().getNameSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBooleanConditionRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleNotes
entryRuleNotes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotesRule()); }
	iv_ruleNotes=ruleNotes
	{ $current=$iv_ruleNotes.current; }
	EOF;

// Rule Notes
ruleNotes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='notes:'
				{
					newLeafNode(otherlv_0, grammarAccess.getNotesAccess().getNotesKeyword_0_0_0());
				}
				    |
				otherlv_1='note:'
				{
					newLeafNode(otherlv_1, grammarAccess.getNotesAccess().getNoteKeyword_0_0_1());
				}
			)
			    |
			(
				otherlv_2='Anmerkungen:'
				{
					newLeafNode(otherlv_2, grammarAccess.getNotesAccess().getAnmerkungenKeyword_0_1_0());
				}
				    |
				otherlv_3='Anmerkung:'
				{
					newLeafNode(otherlv_3, grammarAccess.getNotesAccess().getAnmerkungKeyword_0_1_1());
				}
			)
		)
		(
			(
				lv_content_4_0=RULE_STRING
				{
					newLeafNode(lv_content_4_0, grammarAccess.getNotesAccess().getContentSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNotesRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleUsedTypes
entryRuleUsedTypes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUsedTypesRule()); }
	iv_ruleUsedTypes=ruleUsedTypes
	{ $current=$iv_ruleUsedTypes.current; }
	EOF;

// Rule UsedTypes
ruleUsedTypes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='used'
				{
					newLeafNode(otherlv_0, grammarAccess.getUsedTypesAccess().getUsedKeyword_0_0_0());
				}
				otherlv_1='building-blocks:'
				{
					newLeafNode(otherlv_1, grammarAccess.getUsedTypesAccess().getBuildingBlocksKeyword_0_0_1());
				}
			)
			    |
			(
				otherlv_2='Genutzte'
				{
					newLeafNode(otherlv_2, grammarAccess.getUsedTypesAccess().getGenutzteKeyword_0_1_0());
				}
				otherlv_3='Bausteine:'
				{
					newLeafNode(otherlv_3, grammarAccess.getUsedTypesAccess().getBausteineKeyword_0_1_1());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUsedTypesAccess().getTypesTypeParserRuleCall_1_0());
				}
				lv_types_4_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUsedTypesRule());
					}
					add(
						$current,
						"types",
						lv_types_4_0,
						"io.deniffel.dsl.useCase.UseCase.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='-'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeAccess().getHyphenMinusKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					lv_description_3_0=RULE_STRING
					{
						newLeafNode(lv_description_3_0, grammarAccess.getTypeAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeAccess().getImportInfoQualifiedNameParserRuleCall_3_1_0());
					}
					lv_importInfo_6_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeRule());
						}
						set(
							$current,
							"importInfo",
							lv_importInfo_6_0,
							"io.deniffel.dsl.useCase.UseCase.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getTypeAccess().getRightSquareBracketKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleUsedExceptions
entryRuleUsedExceptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUsedExceptionsRule()); }
	iv_ruleUsedExceptions=ruleUsedExceptions
	{ $current=$iv_ruleUsedExceptions.current; }
	EOF;

// Rule UsedExceptions
ruleUsedExceptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='used'
				{
					newLeafNode(otherlv_0, grammarAccess.getUsedExceptionsAccess().getUsedKeyword_0_0_0());
				}
				otherlv_1='errors:'
				{
					newLeafNode(otherlv_1, grammarAccess.getUsedExceptionsAccess().getErrorsKeyword_0_0_1());
				}
			)
			    |
			(
				otherlv_2='Genutzte'
				{
					newLeafNode(otherlv_2, grammarAccess.getUsedExceptionsAccess().getGenutzteKeyword_0_1_0());
				}
				otherlv_3='Fehler:'
				{
					newLeafNode(otherlv_3, grammarAccess.getUsedExceptionsAccess().getFehlerKeyword_0_1_1());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUsedExceptionsAccess().getExceptionsExceptionDeclerationParserRuleCall_1_0());
				}
				lv_exceptions_4_0=ruleExceptionDecleration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUsedExceptionsRule());
					}
					add(
						$current,
						"exceptions",
						lv_exceptions_4_0,
						"io.deniffel.dsl.useCase.UseCase.ExceptionDecleration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleException
entryRuleException returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionRule()); }
	iv_ruleException=ruleException
	{ $current=$iv_ruleException.current; }
	EOF;

// Rule Exception
ruleException returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getExceptionRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getExceptionAccess().getTypeExceptionDeclerationCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleExceptionDecleration
entryRuleExceptionDecleration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionDeclerationRule()); }
	iv_ruleExceptionDecleration=ruleExceptionDecleration
	{ $current=$iv_ruleExceptionDecleration.current; }
	EOF;

// Rule ExceptionDecleration
ruleExceptionDecleration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='-'
		{
			newLeafNode(otherlv_0, grammarAccess.getExceptionDeclerationAccess().getHyphenMinusKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getExceptionDeclerationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExceptionDeclerationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getExceptionDeclerationAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					lv_message_3_0=RULE_STRING
					{
						newLeafNode(lv_message_3_0, grammarAccess.getExceptionDeclerationAccess().getMessageSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExceptionDeclerationRule());
						}
						setWithLastConsumed(
							$current,
							"message",
							lv_message_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getExceptionDeclerationAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getExceptionDeclerationAccess().getLeftSquareBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExceptionDeclerationAccess().getImportInfoQualifiedNameParserRuleCall_3_1_0());
					}
					lv_importInfo_6_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExceptionDeclerationRule());
						}
						set(
							$current,
							"importInfo",
							lv_importInfo_6_0,
							"io.deniffel.dsl.useCase.UseCase.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getExceptionDeclerationAccess().getRightSquareBracketKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleExample
entryRuleExample returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExampleRule()); }
	iv_ruleExample=ruleExample
	{ $current=$iv_ruleExample.current; }
	EOF;

// Rule Example
ruleExample returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Beispiel'
		{
			newLeafNode(otherlv_0, grammarAccess.getExampleAccess().getBeispielKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getExampleAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExampleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getExampleAccess().getColonKeyword_2());
		}
		(
			otherlv_3='Beschreibung:'
			{
				newLeafNode(otherlv_3, grammarAccess.getExampleAccess().getBeschreibungKeyword_3_0());
			}
			(
				(
					lv_description_4_0=RULE_STRING
					{
						newLeafNode(lv_description_4_0, grammarAccess.getExampleAccess().getDescriptionSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExampleRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getExampleAccess().getGivenGivenParserRuleCall_4_0());
				}
				lv_given_5_0=ruleGiven
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExampleRule());
					}
					add(
						$current,
						"given",
						lv_given_5_0,
						"io.deniffel.dsl.useCase.UseCase.Given");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExampleAccess().getGivenAndGivenAndParserRuleCall_5_0());
				}
				lv_givenAnd_6_0=ruleGivenAnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExampleRule());
					}
					add(
						$current,
						"givenAnd",
						lv_givenAnd_6_0,
						"io.deniffel.dsl.useCase.UseCase.GivenAnd");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getExampleAccess().getWhenWhenParserRuleCall_6_0());
				}
				lv_when_7_0=ruleWhen
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExampleRule());
					}
					add(
						$current,
						"when",
						lv_when_7_0,
						"io.deniffel.dsl.useCase.UseCase.When");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExampleAccess().getWhenAndWhenAndParserRuleCall_7_0());
				}
				lv_whenAnd_8_0=ruleWhenAnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExampleRule());
					}
					add(
						$current,
						"whenAnd",
						lv_whenAnd_8_0,
						"io.deniffel.dsl.useCase.UseCase.WhenAnd");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getExampleAccess().getThenThenParserRuleCall_8_0());
				}
				lv_then_9_0=ruleThen
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExampleRule());
					}
					add(
						$current,
						"then",
						lv_then_9_0,
						"io.deniffel.dsl.useCase.UseCase.Then");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExampleAccess().getThenAndThenAndParserRuleCall_9_0());
				}
				lv_thenAnd_10_0=ruleThenAnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExampleRule());
					}
					add(
						$current,
						"thenAnd",
						lv_thenAnd_10_0,
						"io.deniffel.dsl.useCase.UseCase.ThenAnd");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_11='Warum?'
			{
				newLeafNode(otherlv_11, grammarAccess.getExampleAccess().getWarumKeyword_10_0());
			}
			(
				(
					lv_explaination_12_0=RULE_STRING
					{
						newLeafNode(lv_explaination_12_0, grammarAccess.getExampleAccess().getExplainationSTRINGTerminalRuleCall_10_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExampleRule());
						}
						setWithLastConsumed(
							$current,
							"explaination",
							lv_explaination_12_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_13='Beispiel'
		{
			newLeafNode(otherlv_13, grammarAccess.getExampleAccess().getBeispielKeyword_11());
		}
		otherlv_14='Ende'
		{
			newLeafNode(otherlv_14, grammarAccess.getExampleAccess().getEndeKeyword_12());
		}
	)
;

// Entry rule entryRuleGiven
entryRuleGiven returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGivenRule()); }
	iv_ruleGiven=ruleGiven
	{ $current=$iv_ruleGiven.current; }
	EOF;

// Rule Given
ruleGiven returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Gegeben'
			{
				newLeafNode(otherlv_0, grammarAccess.getGivenAccess().getGegebenKeyword_0_0());
			}
			    |
			otherlv_1='gegeben'
			{
				newLeafNode(otherlv_1, grammarAccess.getGivenAccess().getGegebenKeyword_0_1());
			}
		)
		(
			(
				lv_content_2_0=RULE_STRING
				{
					newLeafNode(lv_content_2_0, grammarAccess.getGivenAccess().getContentSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGivenRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleGivenAnd
entryRuleGivenAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGivenAndRule()); }
	iv_ruleGivenAnd=ruleGivenAnd
	{ $current=$iv_ruleGivenAnd.current; }
	EOF;

// Rule GivenAnd
ruleGivenAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='und'
			{
				newLeafNode(otherlv_0, grammarAccess.getGivenAndAccess().getUndKeyword_0_0());
			}
			    |
			otherlv_1='aber'
			{
				newLeafNode(otherlv_1, grammarAccess.getGivenAndAccess().getAberKeyword_0_1());
			}
		)
		(
			(
				lv_content_2_0=RULE_STRING
				{
					newLeafNode(lv_content_2_0, grammarAccess.getGivenAndAccess().getContentSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGivenAndRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleWhen
entryRuleWhen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhenRule()); }
	iv_ruleWhen=ruleWhen
	{ $current=$iv_ruleWhen.current; }
	EOF;

// Rule When
ruleWhen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Wenn'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhenAccess().getWennKeyword_0());
		}
		(
			(
				lv_content_1_0=RULE_STRING
				{
					newLeafNode(lv_content_1_0, grammarAccess.getWhenAccess().getContentSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWhenRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleWhenAnd
entryRuleWhenAnd returns [String current=null]:
	{ newCompositeNode(grammarAccess.getWhenAndRule()); }
	iv_ruleWhenAnd=ruleWhenAnd
	{ $current=$iv_ruleWhenAnd.current.getText(); }
	EOF;

// Rule WhenAnd
ruleWhenAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='und'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getWhenAndAccess().getUndKeyword_0());
		}
		    |
		kw='aber'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getWhenAndAccess().getAberKeyword_1());
		}
	)
;

// Entry rule entryRuleThen
entryRuleThen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThenRule()); }
	iv_ruleThen=ruleThen
	{ $current=$iv_ruleThen.current; }
	EOF;

// Rule Then
ruleThen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Dann'
			{
				newLeafNode(otherlv_0, grammarAccess.getThenAccess().getDannKeyword_0_0());
			}
			    |
			otherlv_1='dann'
			{
				newLeafNode(otherlv_1, grammarAccess.getThenAccess().getDannKeyword_0_1());
			}
		)
		(
			(
				lv_content_2_0=RULE_STRING
				{
					newLeafNode(lv_content_2_0, grammarAccess.getThenAccess().getContentSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getThenRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleThenAnd
entryRuleThenAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThenAndRule()); }
	iv_ruleThenAnd=ruleThenAnd
	{ $current=$iv_ruleThenAnd.current; }
	EOF;

// Rule ThenAnd
ruleThenAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='und'
			{
				newLeafNode(otherlv_0, grammarAccess.getThenAndAccess().getUndKeyword_0_0());
			}
			    |
			otherlv_1='aber'
			{
				newLeafNode(otherlv_1, grammarAccess.getThenAndAccess().getAberKeyword_0_1());
			}
		)
		(
			(
				lv_content_2_0=RULE_STRING
				{
					newLeafNode(lv_content_2_0, grammarAccess.getThenAndAccess().getContentSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getThenAndRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
