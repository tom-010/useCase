grammar io.deniffel.dsl.useCase.UseCase with org.eclipse.xtext.common.Terminals

generate useCase "http://www.deniffel.io/dsl/useCase/UseCase"

Model:
	(useCases+=UseCase)*
	types=UsedTypes
	exceptions=UsedExceptions;
	
	QualifiedName:
    	ID ('.' ID)*;
    
	QualifiedNumber:
		INT ('.' INT)*'.';
	
UseCase:
	'use-case' name=STRING
	(descriptions+=Description)?
	(allowedUserGroups+=AllowedUserGroups)?
	(inputs+=Inputs)?
	(outputs+=Outputs)?
	(preconditions=PreConditions)?
	(steps+=Steps)?
	(notes+=Notes)?
	'end' 'of' 'use-case';

	Description:
		'description:' name=STRING;
		
		
	AllowedUserGroups:
		'allowed-usergroups:'
		(groups+=AllowedUserGroup )*;
	  
	AllowedUserGroup:
		(many?='many')? '-' name=STRING ('as' type=[Type])?;
	
	Inputs:
		('requires:'|'require:'|'requires' 'the' 'following' 'input' ':')
		(inputs+=Input)*;
		
	Input:
		(many?='many')? '-' content=STRING (optional=Optional)? ('as' type=[Type])? ('(' 'e.g' example=STRING ')')?;
	
	Outputs:
		('produces:'|'produce:'|'produces' 'the' 'following' 'output' ':')
		(outputs+=Output)*;
	
	Output:
		(many?='many')? '-' content=STRING ('as' type=[Type])? ('(' 'e.g' example=STRING ')')?;
		
	Optional:
		'optional';
    
	
	PreConditions:
		('pre-condition:'|'pre-conditions:')
		(conditions+=Condition)*;
	
	Condition:
		'-' content=STRING;
	
	Steps:
		'steps:'
			(steps+=Step)*;
	Step:
		number=QualifiedNumber action=STRING(error=RaiseError)?;
	
	RaiseError:
		'.' ('Raise'|'On' 'error' 'raise') exception=Exception;
	
	
	Notes:
		('notes:'|'note:') content=STRING;


UsedTypes: 
	'used' 'types:'
		(types+=Type)*;

	Type:
	    '-' name=ID '('description=STRING')' ('['importInfo=QualifiedName']' )?;

UsedExceptions:
	'used' 'errors:'
		(exceptions+=ExceptionDecleration)*;


	Exception:
		type=[ExceptionDecleration];


	ExceptionDecleration: 
		'-' name=ID '('message=STRING')' ('['importInfo=QualifiedName']' )?;
