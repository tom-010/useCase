/**
 * generated by Xtext 2.13.0
 */
package io.deniffel.dsl.useCase.useCase;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Use Case</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link io.deniffel.dsl.useCase.useCase.UseCase#getName <em>Name</em>}</li>
 *   <li>{@link io.deniffel.dsl.useCase.useCase.UseCase#getDescriptions <em>Descriptions</em>}</li>
 *   <li>{@link io.deniffel.dsl.useCase.useCase.UseCase#getAllowedUserGroups <em>Allowed User Groups</em>}</li>
 *   <li>{@link io.deniffel.dsl.useCase.useCase.UseCase#getInputs <em>Inputs</em>}</li>
 *   <li>{@link io.deniffel.dsl.useCase.useCase.UseCase#getOutputs <em>Outputs</em>}</li>
 *   <li>{@link io.deniffel.dsl.useCase.useCase.UseCase#getPreconditions <em>Preconditions</em>}</li>
 *   <li>{@link io.deniffel.dsl.useCase.useCase.UseCase#getSteps <em>Steps</em>}</li>
 *   <li>{@link io.deniffel.dsl.useCase.useCase.UseCase#getNotes <em>Notes</em>}</li>
 * </ul>
 *
 * @see io.deniffel.dsl.useCase.useCase.UseCasePackage#getUseCase()
 * @model
 * @generated
 */
public interface UseCase extends EObject
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see io.deniffel.dsl.useCase.useCase.UseCasePackage#getUseCase_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link io.deniffel.dsl.useCase.useCase.UseCase#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Descriptions</b></em>' containment reference list.
   * The list contents are of type {@link io.deniffel.dsl.useCase.useCase.Description}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Descriptions</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Descriptions</em>' containment reference list.
   * @see io.deniffel.dsl.useCase.useCase.UseCasePackage#getUseCase_Descriptions()
   * @model containment="true"
   * @generated
   */
  EList<Description> getDescriptions();

  /**
   * Returns the value of the '<em><b>Allowed User Groups</b></em>' containment reference list.
   * The list contents are of type {@link io.deniffel.dsl.useCase.useCase.AllowedUserGroups}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Allowed User Groups</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Allowed User Groups</em>' containment reference list.
   * @see io.deniffel.dsl.useCase.useCase.UseCasePackage#getUseCase_AllowedUserGroups()
   * @model containment="true"
   * @generated
   */
  EList<AllowedUserGroups> getAllowedUserGroups();

  /**
   * Returns the value of the '<em><b>Inputs</b></em>' containment reference list.
   * The list contents are of type {@link io.deniffel.dsl.useCase.useCase.Inputs}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Inputs</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Inputs</em>' containment reference list.
   * @see io.deniffel.dsl.useCase.useCase.UseCasePackage#getUseCase_Inputs()
   * @model containment="true"
   * @generated
   */
  EList<Inputs> getInputs();

  /**
   * Returns the value of the '<em><b>Outputs</b></em>' containment reference list.
   * The list contents are of type {@link io.deniffel.dsl.useCase.useCase.Outputs}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Outputs</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Outputs</em>' containment reference list.
   * @see io.deniffel.dsl.useCase.useCase.UseCasePackage#getUseCase_Outputs()
   * @model containment="true"
   * @generated
   */
  EList<Outputs> getOutputs();

  /**
   * Returns the value of the '<em><b>Preconditions</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Preconditions</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Preconditions</em>' containment reference.
   * @see #setPreconditions(PreConditions)
   * @see io.deniffel.dsl.useCase.useCase.UseCasePackage#getUseCase_Preconditions()
   * @model containment="true"
   * @generated
   */
  PreConditions getPreconditions();

  /**
   * Sets the value of the '{@link io.deniffel.dsl.useCase.useCase.UseCase#getPreconditions <em>Preconditions</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Preconditions</em>' containment reference.
   * @see #getPreconditions()
   * @generated
   */
  void setPreconditions(PreConditions value);

  /**
   * Returns the value of the '<em><b>Steps</b></em>' containment reference list.
   * The list contents are of type {@link io.deniffel.dsl.useCase.useCase.Steps}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Steps</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Steps</em>' containment reference list.
   * @see io.deniffel.dsl.useCase.useCase.UseCasePackage#getUseCase_Steps()
   * @model containment="true"
   * @generated
   */
  EList<Steps> getSteps();

  /**
   * Returns the value of the '<em><b>Notes</b></em>' containment reference list.
   * The list contents are of type {@link io.deniffel.dsl.useCase.useCase.Notes}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Notes</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Notes</em>' containment reference list.
   * @see io.deniffel.dsl.useCase.useCase.UseCasePackage#getUseCase_Notes()
   * @model containment="true"
   * @generated
   */
  EList<Notes> getNotes();

} // UseCase
