/**
 * generated by Xtext 2.13.0
 */
package io.deniffel.dsl.useCase.useCase;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see io.deniffel.dsl.useCase.useCase.UseCaseFactory
 * @model kind="package"
 * @generated
 */
public interface UseCasePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "useCase";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.deniffel.io/dsl/useCase/UseCase";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "useCase";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  UseCasePackage eINSTANCE = io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl.init();

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.ModelImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Company</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__COMPANY = 0;

  /**
   * The feature id for the '<em><b>Package</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__PACKAGE = 1;

  /**
   * The feature id for the '<em><b>Use Cases</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__USE_CASES = 2;

  /**
   * The feature id for the '<em><b>Types</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__TYPES = 3;

  /**
   * The feature id for the '<em><b>Exceptions</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__EXCEPTIONS = 4;

  /**
   * The feature id for the '<em><b>Examples</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__EXAMPLES = 5;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.PackageImpl <em>Package</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.PackageImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getPackage()
   * @generated
   */
  int PACKAGE = 1;

  /**
   * The feature id for the '<em><b>Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE__PARTS = 0;

  /**
   * The number of structural features of the '<em>Package</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.PackagePartImpl <em>Package Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.PackagePartImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getPackagePart()
   * @generated
   */
  int PACKAGE_PART = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_PART__NAME = 0;

  /**
   * The number of structural features of the '<em>Package Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKAGE_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.UseCaseImpl <em>Use Case</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCaseImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getUseCase()
   * @generated
   */
  int USE_CASE = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__NAME = 0;

  /**
   * The feature id for the '<em><b>Descriptions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__DESCRIPTIONS = 1;

  /**
   * The feature id for the '<em><b>Allowed User Groups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__ALLOWED_USER_GROUPS = 2;

  /**
   * The feature id for the '<em><b>Inputs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__INPUTS = 3;

  /**
   * The feature id for the '<em><b>Optional Inputs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__OPTIONAL_INPUTS = 4;

  /**
   * The feature id for the '<em><b>Outputs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__OUTPUTS = 5;

  /**
   * The feature id for the '<em><b>Preconditions</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__PRECONDITIONS = 6;

  /**
   * The feature id for the '<em><b>Steps</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__STEPS = 7;

  /**
   * The feature id for the '<em><b>Notes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__NOTES = 8;

  /**
   * The number of structural features of the '<em>Use Case</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE_FEATURE_COUNT = 9;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.DescriptionImpl <em>Description</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.DescriptionImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getDescription()
   * @generated
   */
  int DESCRIPTION = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DESCRIPTION__NAME = 0;

  /**
   * The number of structural features of the '<em>Description</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DESCRIPTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.AllowedUserGroupsImpl <em>Allowed User Groups</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.AllowedUserGroupsImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getAllowedUserGroups()
   * @generated
   */
  int ALLOWED_USER_GROUPS = 5;

  /**
   * The feature id for the '<em><b>Groups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALLOWED_USER_GROUPS__GROUPS = 0;

  /**
   * The number of structural features of the '<em>Allowed User Groups</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALLOWED_USER_GROUPS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.AllowedUserGroupImpl <em>Allowed User Group</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.AllowedUserGroupImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getAllowedUserGroup()
   * @generated
   */
  int ALLOWED_USER_GROUP = 6;

  /**
   * The feature id for the '<em><b>Many</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALLOWED_USER_GROUP__MANY = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALLOWED_USER_GROUP__NAME = 1;

  /**
   * The feature id for the '<em><b>Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALLOWED_USER_GROUP__TYPE = 2;

  /**
   * The number of structural features of the '<em>Allowed User Group</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALLOWED_USER_GROUP_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.InputsImpl <em>Inputs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.InputsImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getInputs()
   * @generated
   */
  int INPUTS = 7;

  /**
   * The feature id for the '<em><b>Inputs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INPUTS__INPUTS = 0;

  /**
   * The number of structural features of the '<em>Inputs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INPUTS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.OptionalInputsImpl <em>Optional Inputs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.OptionalInputsImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getOptionalInputs()
   * @generated
   */
  int OPTIONAL_INPUTS = 8;

  /**
   * The feature id for the '<em><b>Inputs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIONAL_INPUTS__INPUTS = 0;

  /**
   * The number of structural features of the '<em>Optional Inputs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIONAL_INPUTS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.InputImpl <em>Input</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.InputImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getInput()
   * @generated
   */
  int INPUT = 9;

  /**
   * The feature id for the '<em><b>Many</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INPUT__MANY = 0;

  /**
   * The feature id for the '<em><b>Optional</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INPUT__OPTIONAL = 1;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INPUT__CONTENT = 2;

  /**
   * The feature id for the '<em><b>Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INPUT__TYPE = 3;

  /**
   * The feature id for the '<em><b>Example</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INPUT__EXAMPLE = 4;

  /**
   * The number of structural features of the '<em>Input</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INPUT_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.OutputsImpl <em>Outputs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.OutputsImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getOutputs()
   * @generated
   */
  int OUTPUTS = 10;

  /**
   * The feature id for the '<em><b>Outputs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUTS__OUTPUTS = 0;

  /**
   * The number of structural features of the '<em>Outputs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUTS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.OutputImpl <em>Output</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.OutputImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getOutput()
   * @generated
   */
  int OUTPUT = 11;

  /**
   * The feature id for the '<em><b>Many</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT__MANY = 0;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT__CONTENT = 1;

  /**
   * The feature id for the '<em><b>Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT__TYPE = 2;

  /**
   * The feature id for the '<em><b>Example</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT__EXAMPLE = 3;

  /**
   * The number of structural features of the '<em>Output</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.PreConditionsImpl <em>Pre Conditions</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.PreConditionsImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getPreConditions()
   * @generated
   */
  int PRE_CONDITIONS = 12;

  /**
   * The feature id for the '<em><b>Conditions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRE_CONDITIONS__CONDITIONS = 0;

  /**
   * The number of structural features of the '<em>Pre Conditions</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRE_CONDITIONS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.ConditionImpl <em>Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.ConditionImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getCondition()
   * @generated
   */
  int CONDITION = 13;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.StepsImpl <em>Steps</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.StepsImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getSteps()
   * @generated
   */
  int STEPS = 14;

  /**
   * The feature id for the '<em><b>Steps</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEPS__STEPS = 0;

  /**
   * The number of structural features of the '<em>Steps</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEPS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.StepImpl <em>Step</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.StepImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getStep()
   * @generated
   */
  int STEP = 15;

  /**
   * The feature id for the '<em><b>Number</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEP__NUMBER = 0;

  /**
   * The feature id for the '<em><b>Action</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEP__ACTION = 1;

  /**
   * The feature id for the '<em><b>Error</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEP__ERROR = 2;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEP__CONDITION = 3;

  /**
   * The feature id for the '<em><b>Loop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEP__LOOP = 4;

  /**
   * The feature id for the '<em><b>Exception</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEP__EXCEPTION = 5;

  /**
   * The number of structural features of the '<em>Step</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEP_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.RaiseErrorConditionalImpl <em>Raise Error Conditional</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.RaiseErrorConditionalImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getRaiseErrorConditional()
   * @generated
   */
  int RAISE_ERROR_CONDITIONAL = 16;

  /**
   * The feature id for the '<em><b>Exception</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RAISE_ERROR_CONDITIONAL__EXCEPTION = 0;

  /**
   * The number of structural features of the '<em>Raise Error Conditional</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RAISE_ERROR_CONDITIONAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.RaiseErrorNowImpl <em>Raise Error Now</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.RaiseErrorNowImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getRaiseErrorNow()
   * @generated
   */
  int RAISE_ERROR_NOW = 17;

  /**
   * The feature id for the '<em><b>Exception</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RAISE_ERROR_NOW__EXCEPTION = 0;

  /**
   * The number of structural features of the '<em>Raise Error Now</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RAISE_ERROR_NOW_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.IfStatementImpl <em>If Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.IfStatementImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getIfStatement()
   * @generated
   */
  int IF_STATEMENT = 18;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__CONDITION = 0;

  /**
   * The number of structural features of the '<em>If Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.LoopImpl <em>Loop</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.LoopImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getLoop()
   * @generated
   */
  int LOOP = 19;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOP__CONDITION = 0;

  /**
   * The number of structural features of the '<em>Loop</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOP_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.BooleanConditionImpl <em>Boolean Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.BooleanConditionImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getBooleanCondition()
   * @generated
   */
  int BOOLEAN_CONDITION = 20;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_CONDITION__NAME = 0;

  /**
   * The number of structural features of the '<em>Boolean Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_CONDITION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.NotesImpl <em>Notes</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.NotesImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getNotes()
   * @generated
   */
  int NOTES = 21;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOTES__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Notes</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOTES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.UsedTypesImpl <em>Used Types</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.UsedTypesImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getUsedTypes()
   * @generated
   */
  int USED_TYPES = 22;

  /**
   * The feature id for the '<em><b>Types</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USED_TYPES__TYPES = 0;

  /**
   * The number of structural features of the '<em>Used Types</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USED_TYPES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.TypeImpl <em>Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.TypeImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getType()
   * @generated
   */
  int TYPE = 23;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Description</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__DESCRIPTION = 1;

  /**
   * The feature id for the '<em><b>Import Info</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__IMPORT_INFO = 2;

  /**
   * The number of structural features of the '<em>Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.UsedExceptionsImpl <em>Used Exceptions</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.UsedExceptionsImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getUsedExceptions()
   * @generated
   */
  int USED_EXCEPTIONS = 24;

  /**
   * The feature id for the '<em><b>Exceptions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USED_EXCEPTIONS__EXCEPTIONS = 0;

  /**
   * The number of structural features of the '<em>Used Exceptions</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USED_EXCEPTIONS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.ExceptionImpl <em>Exception</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.ExceptionImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getException()
   * @generated
   */
  int EXCEPTION = 25;

  /**
   * The feature id for the '<em><b>Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXCEPTION__TYPE = 0;

  /**
   * The number of structural features of the '<em>Exception</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXCEPTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.ExceptionDeclerationImpl <em>Exception Decleration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.ExceptionDeclerationImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getExceptionDecleration()
   * @generated
   */
  int EXCEPTION_DECLERATION = 26;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXCEPTION_DECLERATION__NAME = 0;

  /**
   * The feature id for the '<em><b>Message</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXCEPTION_DECLERATION__MESSAGE = 1;

  /**
   * The feature id for the '<em><b>Import Info</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXCEPTION_DECLERATION__IMPORT_INFO = 2;

  /**
   * The number of structural features of the '<em>Exception Decleration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXCEPTION_DECLERATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.ExampleImpl <em>Example</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.ExampleImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getExample()
   * @generated
   */
  int EXAMPLE = 27;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXAMPLE__NAME = 0;

  /**
   * The feature id for the '<em><b>Description</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXAMPLE__DESCRIPTION = 1;

  /**
   * The feature id for the '<em><b>Given</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXAMPLE__GIVEN = 2;

  /**
   * The feature id for the '<em><b>Given And</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXAMPLE__GIVEN_AND = 3;

  /**
   * The feature id for the '<em><b>When</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXAMPLE__WHEN = 4;

  /**
   * The feature id for the '<em><b>When And</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXAMPLE__WHEN_AND = 5;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXAMPLE__THEN = 6;

  /**
   * The feature id for the '<em><b>Then And</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXAMPLE__THEN_AND = 7;

  /**
   * The feature id for the '<em><b>Explaination</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXAMPLE__EXPLAINATION = 8;

  /**
   * The number of structural features of the '<em>Example</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXAMPLE_FEATURE_COUNT = 9;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.GivenImpl <em>Given</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.GivenImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getGiven()
   * @generated
   */
  int GIVEN = 28;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GIVEN__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Given</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GIVEN_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.GivenAndImpl <em>Given And</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.GivenAndImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getGivenAnd()
   * @generated
   */
  int GIVEN_AND = 29;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GIVEN_AND__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Given And</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GIVEN_AND_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.WhenImpl <em>When</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.WhenImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getWhen()
   * @generated
   */
  int WHEN = 30;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHEN__CONTENT = 0;

  /**
   * The number of structural features of the '<em>When</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHEN_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.ThenImpl <em>Then</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.ThenImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getThen()
   * @generated
   */
  int THEN = 31;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THEN__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Then</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THEN_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.deniffel.dsl.useCase.useCase.impl.ThenAndImpl <em>Then And</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.deniffel.dsl.useCase.useCase.impl.ThenAndImpl
   * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getThenAnd()
   * @generated
   */
  int THEN_AND = 32;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THEN_AND__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Then And</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THEN_AND_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Model#getCompany <em>Company</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Company</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Model#getCompany()
   * @see #getModel()
   * @generated
   */
  EAttribute getModel_Company();

  /**
   * Returns the meta object for the containment reference '{@link io.deniffel.dsl.useCase.useCase.Model#getPackage <em>Package</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Package</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Model#getPackage()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Package();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.Model#getUseCases <em>Use Cases</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Use Cases</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Model#getUseCases()
   * @see #getModel()
   * @generated
   */
  EReference getModel_UseCases();

  /**
   * Returns the meta object for the containment reference '{@link io.deniffel.dsl.useCase.useCase.Model#getTypes <em>Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Types</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Model#getTypes()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Types();

  /**
   * Returns the meta object for the containment reference '{@link io.deniffel.dsl.useCase.useCase.Model#getExceptions <em>Exceptions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exceptions</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Model#getExceptions()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Exceptions();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.Model#getExamples <em>Examples</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Examples</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Model#getExamples()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Examples();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Package <em>Package</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Package</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Package
   * @generated
   */
  EClass getPackage();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.Package#getParts <em>Parts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parts</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Package#getParts()
   * @see #getPackage()
   * @generated
   */
  EReference getPackage_Parts();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.PackagePart <em>Package Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Package Part</em>'.
   * @see io.deniffel.dsl.useCase.useCase.PackagePart
   * @generated
   */
  EClass getPackagePart();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.PackagePart#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see io.deniffel.dsl.useCase.useCase.PackagePart#getName()
   * @see #getPackagePart()
   * @generated
   */
  EAttribute getPackagePart_Name();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.UseCase <em>Use Case</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Use Case</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UseCase
   * @generated
   */
  EClass getUseCase();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.UseCase#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UseCase#getName()
   * @see #getUseCase()
   * @generated
   */
  EAttribute getUseCase_Name();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.UseCase#getDescriptions <em>Descriptions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Descriptions</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UseCase#getDescriptions()
   * @see #getUseCase()
   * @generated
   */
  EReference getUseCase_Descriptions();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.UseCase#getAllowedUserGroups <em>Allowed User Groups</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Allowed User Groups</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UseCase#getAllowedUserGroups()
   * @see #getUseCase()
   * @generated
   */
  EReference getUseCase_AllowedUserGroups();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.UseCase#getInputs <em>Inputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Inputs</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UseCase#getInputs()
   * @see #getUseCase()
   * @generated
   */
  EReference getUseCase_Inputs();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.UseCase#getOptionalInputs <em>Optional Inputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Optional Inputs</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UseCase#getOptionalInputs()
   * @see #getUseCase()
   * @generated
   */
  EReference getUseCase_OptionalInputs();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.UseCase#getOutputs <em>Outputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Outputs</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UseCase#getOutputs()
   * @see #getUseCase()
   * @generated
   */
  EReference getUseCase_Outputs();

  /**
   * Returns the meta object for the containment reference '{@link io.deniffel.dsl.useCase.useCase.UseCase#getPreconditions <em>Preconditions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Preconditions</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UseCase#getPreconditions()
   * @see #getUseCase()
   * @generated
   */
  EReference getUseCase_Preconditions();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.UseCase#getSteps <em>Steps</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Steps</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UseCase#getSteps()
   * @see #getUseCase()
   * @generated
   */
  EReference getUseCase_Steps();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.UseCase#getNotes <em>Notes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Notes</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UseCase#getNotes()
   * @see #getUseCase()
   * @generated
   */
  EReference getUseCase_Notes();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Description <em>Description</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Description</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Description
   * @generated
   */
  EClass getDescription();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Description#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Description#getName()
   * @see #getDescription()
   * @generated
   */
  EAttribute getDescription_Name();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.AllowedUserGroups <em>Allowed User Groups</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Allowed User Groups</em>'.
   * @see io.deniffel.dsl.useCase.useCase.AllowedUserGroups
   * @generated
   */
  EClass getAllowedUserGroups();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.AllowedUserGroups#getGroups <em>Groups</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Groups</em>'.
   * @see io.deniffel.dsl.useCase.useCase.AllowedUserGroups#getGroups()
   * @see #getAllowedUserGroups()
   * @generated
   */
  EReference getAllowedUserGroups_Groups();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.AllowedUserGroup <em>Allowed User Group</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Allowed User Group</em>'.
   * @see io.deniffel.dsl.useCase.useCase.AllowedUserGroup
   * @generated
   */
  EClass getAllowedUserGroup();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.AllowedUserGroup#isMany <em>Many</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Many</em>'.
   * @see io.deniffel.dsl.useCase.useCase.AllowedUserGroup#isMany()
   * @see #getAllowedUserGroup()
   * @generated
   */
  EAttribute getAllowedUserGroup_Many();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.AllowedUserGroup#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see io.deniffel.dsl.useCase.useCase.AllowedUserGroup#getName()
   * @see #getAllowedUserGroup()
   * @generated
   */
  EAttribute getAllowedUserGroup_Name();

  /**
   * Returns the meta object for the reference '{@link io.deniffel.dsl.useCase.useCase.AllowedUserGroup#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Type</em>'.
   * @see io.deniffel.dsl.useCase.useCase.AllowedUserGroup#getType()
   * @see #getAllowedUserGroup()
   * @generated
   */
  EReference getAllowedUserGroup_Type();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Inputs <em>Inputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Inputs</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Inputs
   * @generated
   */
  EClass getInputs();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.Inputs#getInputs <em>Inputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Inputs</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Inputs#getInputs()
   * @see #getInputs()
   * @generated
   */
  EReference getInputs_Inputs();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.OptionalInputs <em>Optional Inputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Optional Inputs</em>'.
   * @see io.deniffel.dsl.useCase.useCase.OptionalInputs
   * @generated
   */
  EClass getOptionalInputs();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.OptionalInputs#getInputs <em>Inputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Inputs</em>'.
   * @see io.deniffel.dsl.useCase.useCase.OptionalInputs#getInputs()
   * @see #getOptionalInputs()
   * @generated
   */
  EReference getOptionalInputs_Inputs();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Input <em>Input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Input</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Input
   * @generated
   */
  EClass getInput();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Input#isMany <em>Many</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Many</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Input#isMany()
   * @see #getInput()
   * @generated
   */
  EAttribute getInput_Many();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Input#getOptional <em>Optional</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Optional</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Input#getOptional()
   * @see #getInput()
   * @generated
   */
  EAttribute getInput_Optional();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Input#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Input#getContent()
   * @see #getInput()
   * @generated
   */
  EAttribute getInput_Content();

  /**
   * Returns the meta object for the reference '{@link io.deniffel.dsl.useCase.useCase.Input#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Type</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Input#getType()
   * @see #getInput()
   * @generated
   */
  EReference getInput_Type();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Input#getExample <em>Example</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Example</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Input#getExample()
   * @see #getInput()
   * @generated
   */
  EAttribute getInput_Example();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Outputs <em>Outputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Outputs</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Outputs
   * @generated
   */
  EClass getOutputs();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.Outputs#getOutputs <em>Outputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Outputs</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Outputs#getOutputs()
   * @see #getOutputs()
   * @generated
   */
  EReference getOutputs_Outputs();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Output <em>Output</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Output</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Output
   * @generated
   */
  EClass getOutput();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Output#isMany <em>Many</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Many</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Output#isMany()
   * @see #getOutput()
   * @generated
   */
  EAttribute getOutput_Many();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Output#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Output#getContent()
   * @see #getOutput()
   * @generated
   */
  EAttribute getOutput_Content();

  /**
   * Returns the meta object for the reference '{@link io.deniffel.dsl.useCase.useCase.Output#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Type</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Output#getType()
   * @see #getOutput()
   * @generated
   */
  EReference getOutput_Type();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Output#getExample <em>Example</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Example</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Output#getExample()
   * @see #getOutput()
   * @generated
   */
  EAttribute getOutput_Example();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.PreConditions <em>Pre Conditions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pre Conditions</em>'.
   * @see io.deniffel.dsl.useCase.useCase.PreConditions
   * @generated
   */
  EClass getPreConditions();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.PreConditions#getConditions <em>Conditions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Conditions</em>'.
   * @see io.deniffel.dsl.useCase.useCase.PreConditions#getConditions()
   * @see #getPreConditions()
   * @generated
   */
  EReference getPreConditions_Conditions();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Condition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Condition</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Condition
   * @generated
   */
  EClass getCondition();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Condition#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Condition#getContent()
   * @see #getCondition()
   * @generated
   */
  EAttribute getCondition_Content();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Steps <em>Steps</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Steps</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Steps
   * @generated
   */
  EClass getSteps();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.Steps#getSteps <em>Steps</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Steps</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Steps#getSteps()
   * @see #getSteps()
   * @generated
   */
  EReference getSteps_Steps();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Step <em>Step</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Step</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Step
   * @generated
   */
  EClass getStep();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Step#getNumber <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Number</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Step#getNumber()
   * @see #getStep()
   * @generated
   */
  EAttribute getStep_Number();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Step#getAction <em>Action</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Action</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Step#getAction()
   * @see #getStep()
   * @generated
   */
  EAttribute getStep_Action();

  /**
   * Returns the meta object for the containment reference '{@link io.deniffel.dsl.useCase.useCase.Step#getError <em>Error</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Error</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Step#getError()
   * @see #getStep()
   * @generated
   */
  EReference getStep_Error();

  /**
   * Returns the meta object for the containment reference '{@link io.deniffel.dsl.useCase.useCase.Step#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Step#getCondition()
   * @see #getStep()
   * @generated
   */
  EReference getStep_Condition();

  /**
   * Returns the meta object for the containment reference '{@link io.deniffel.dsl.useCase.useCase.Step#getLoop <em>Loop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Loop</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Step#getLoop()
   * @see #getStep()
   * @generated
   */
  EReference getStep_Loop();

  /**
   * Returns the meta object for the containment reference '{@link io.deniffel.dsl.useCase.useCase.Step#getException <em>Exception</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exception</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Step#getException()
   * @see #getStep()
   * @generated
   */
  EReference getStep_Exception();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.RaiseErrorConditional <em>Raise Error Conditional</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Raise Error Conditional</em>'.
   * @see io.deniffel.dsl.useCase.useCase.RaiseErrorConditional
   * @generated
   */
  EClass getRaiseErrorConditional();

  /**
   * Returns the meta object for the containment reference '{@link io.deniffel.dsl.useCase.useCase.RaiseErrorConditional#getException <em>Exception</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exception</em>'.
   * @see io.deniffel.dsl.useCase.useCase.RaiseErrorConditional#getException()
   * @see #getRaiseErrorConditional()
   * @generated
   */
  EReference getRaiseErrorConditional_Exception();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.RaiseErrorNow <em>Raise Error Now</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Raise Error Now</em>'.
   * @see io.deniffel.dsl.useCase.useCase.RaiseErrorNow
   * @generated
   */
  EClass getRaiseErrorNow();

  /**
   * Returns the meta object for the containment reference '{@link io.deniffel.dsl.useCase.useCase.RaiseErrorNow#getException <em>Exception</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exception</em>'.
   * @see io.deniffel.dsl.useCase.useCase.RaiseErrorNow#getException()
   * @see #getRaiseErrorNow()
   * @generated
   */
  EReference getRaiseErrorNow_Exception();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.IfStatement <em>If Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Statement</em>'.
   * @see io.deniffel.dsl.useCase.useCase.IfStatement
   * @generated
   */
  EClass getIfStatement();

  /**
   * Returns the meta object for the containment reference '{@link io.deniffel.dsl.useCase.useCase.IfStatement#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see io.deniffel.dsl.useCase.useCase.IfStatement#getCondition()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_Condition();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Loop <em>Loop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Loop</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Loop
   * @generated
   */
  EClass getLoop();

  /**
   * Returns the meta object for the containment reference '{@link io.deniffel.dsl.useCase.useCase.Loop#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Loop#getCondition()
   * @see #getLoop()
   * @generated
   */
  EReference getLoop_Condition();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.BooleanCondition <em>Boolean Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Condition</em>'.
   * @see io.deniffel.dsl.useCase.useCase.BooleanCondition
   * @generated
   */
  EClass getBooleanCondition();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.BooleanCondition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see io.deniffel.dsl.useCase.useCase.BooleanCondition#getName()
   * @see #getBooleanCondition()
   * @generated
   */
  EAttribute getBooleanCondition_Name();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Notes <em>Notes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Notes</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Notes
   * @generated
   */
  EClass getNotes();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Notes#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Notes#getContent()
   * @see #getNotes()
   * @generated
   */
  EAttribute getNotes_Content();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.UsedTypes <em>Used Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Used Types</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UsedTypes
   * @generated
   */
  EClass getUsedTypes();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.UsedTypes#getTypes <em>Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Types</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UsedTypes#getTypes()
   * @see #getUsedTypes()
   * @generated
   */
  EReference getUsedTypes_Types();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Type
   * @generated
   */
  EClass getType();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Type#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Type#getName()
   * @see #getType()
   * @generated
   */
  EAttribute getType_Name();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Type#getDescription <em>Description</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Description</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Type#getDescription()
   * @see #getType()
   * @generated
   */
  EAttribute getType_Description();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Type#getImportInfo <em>Import Info</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Import Info</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Type#getImportInfo()
   * @see #getType()
   * @generated
   */
  EAttribute getType_ImportInfo();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.UsedExceptions <em>Used Exceptions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Used Exceptions</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UsedExceptions
   * @generated
   */
  EClass getUsedExceptions();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.UsedExceptions#getExceptions <em>Exceptions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exceptions</em>'.
   * @see io.deniffel.dsl.useCase.useCase.UsedExceptions#getExceptions()
   * @see #getUsedExceptions()
   * @generated
   */
  EReference getUsedExceptions_Exceptions();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Exception <em>Exception</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exception</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Exception
   * @generated
   */
  EClass getException();

  /**
   * Returns the meta object for the reference '{@link io.deniffel.dsl.useCase.useCase.Exception#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Type</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Exception#getType()
   * @see #getException()
   * @generated
   */
  EReference getException_Type();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.ExceptionDecleration <em>Exception Decleration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exception Decleration</em>'.
   * @see io.deniffel.dsl.useCase.useCase.ExceptionDecleration
   * @generated
   */
  EClass getExceptionDecleration();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.ExceptionDecleration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see io.deniffel.dsl.useCase.useCase.ExceptionDecleration#getName()
   * @see #getExceptionDecleration()
   * @generated
   */
  EAttribute getExceptionDecleration_Name();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.ExceptionDecleration#getMessage <em>Message</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Message</em>'.
   * @see io.deniffel.dsl.useCase.useCase.ExceptionDecleration#getMessage()
   * @see #getExceptionDecleration()
   * @generated
   */
  EAttribute getExceptionDecleration_Message();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.ExceptionDecleration#getImportInfo <em>Import Info</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Import Info</em>'.
   * @see io.deniffel.dsl.useCase.useCase.ExceptionDecleration#getImportInfo()
   * @see #getExceptionDecleration()
   * @generated
   */
  EAttribute getExceptionDecleration_ImportInfo();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Example <em>Example</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Example</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Example
   * @generated
   */
  EClass getExample();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Example#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Example#getName()
   * @see #getExample()
   * @generated
   */
  EAttribute getExample_Name();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Example#getDescription <em>Description</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Description</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Example#getDescription()
   * @see #getExample()
   * @generated
   */
  EAttribute getExample_Description();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.Example#getGiven <em>Given</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Given</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Example#getGiven()
   * @see #getExample()
   * @generated
   */
  EReference getExample_Given();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.Example#getGivenAnd <em>Given And</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Given And</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Example#getGivenAnd()
   * @see #getExample()
   * @generated
   */
  EReference getExample_GivenAnd();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.Example#getWhen <em>When</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>When</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Example#getWhen()
   * @see #getExample()
   * @generated
   */
  EReference getExample_When();

  /**
   * Returns the meta object for the attribute list '{@link io.deniffel.dsl.useCase.useCase.Example#getWhenAnd <em>When And</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>When And</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Example#getWhenAnd()
   * @see #getExample()
   * @generated
   */
  EAttribute getExample_WhenAnd();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.Example#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Then</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Example#getThen()
   * @see #getExample()
   * @generated
   */
  EReference getExample_Then();

  /**
   * Returns the meta object for the containment reference list '{@link io.deniffel.dsl.useCase.useCase.Example#getThenAnd <em>Then And</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Then And</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Example#getThenAnd()
   * @see #getExample()
   * @generated
   */
  EReference getExample_ThenAnd();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Example#getExplaination <em>Explaination</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Explaination</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Example#getExplaination()
   * @see #getExample()
   * @generated
   */
  EAttribute getExample_Explaination();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Given <em>Given</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Given</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Given
   * @generated
   */
  EClass getGiven();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Given#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Given#getContent()
   * @see #getGiven()
   * @generated
   */
  EAttribute getGiven_Content();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.GivenAnd <em>Given And</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Given And</em>'.
   * @see io.deniffel.dsl.useCase.useCase.GivenAnd
   * @generated
   */
  EClass getGivenAnd();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.GivenAnd#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see io.deniffel.dsl.useCase.useCase.GivenAnd#getContent()
   * @see #getGivenAnd()
   * @generated
   */
  EAttribute getGivenAnd_Content();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.When <em>When</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>When</em>'.
   * @see io.deniffel.dsl.useCase.useCase.When
   * @generated
   */
  EClass getWhen();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.When#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see io.deniffel.dsl.useCase.useCase.When#getContent()
   * @see #getWhen()
   * @generated
   */
  EAttribute getWhen_Content();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.Then <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Then</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Then
   * @generated
   */
  EClass getThen();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.Then#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see io.deniffel.dsl.useCase.useCase.Then#getContent()
   * @see #getThen()
   * @generated
   */
  EAttribute getThen_Content();

  /**
   * Returns the meta object for class '{@link io.deniffel.dsl.useCase.useCase.ThenAnd <em>Then And</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Then And</em>'.
   * @see io.deniffel.dsl.useCase.useCase.ThenAnd
   * @generated
   */
  EClass getThenAnd();

  /**
   * Returns the meta object for the attribute '{@link io.deniffel.dsl.useCase.useCase.ThenAnd#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see io.deniffel.dsl.useCase.useCase.ThenAnd#getContent()
   * @see #getThenAnd()
   * @generated
   */
  EAttribute getThenAnd_Content();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  UseCaseFactory getUseCaseFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.ModelImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Company</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODEL__COMPANY = eINSTANCE.getModel_Company();

    /**
     * The meta object literal for the '<em><b>Package</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__PACKAGE = eINSTANCE.getModel_Package();

    /**
     * The meta object literal for the '<em><b>Use Cases</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__USE_CASES = eINSTANCE.getModel_UseCases();

    /**
     * The meta object literal for the '<em><b>Types</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__TYPES = eINSTANCE.getModel_Types();

    /**
     * The meta object literal for the '<em><b>Exceptions</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__EXCEPTIONS = eINSTANCE.getModel_Exceptions();

    /**
     * The meta object literal for the '<em><b>Examples</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__EXAMPLES = eINSTANCE.getModel_Examples();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.PackageImpl <em>Package</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.PackageImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getPackage()
     * @generated
     */
    EClass PACKAGE = eINSTANCE.getPackage();

    /**
     * The meta object literal for the '<em><b>Parts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PACKAGE__PARTS = eINSTANCE.getPackage_Parts();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.PackagePartImpl <em>Package Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.PackagePartImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getPackagePart()
     * @generated
     */
    EClass PACKAGE_PART = eINSTANCE.getPackagePart();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PACKAGE_PART__NAME = eINSTANCE.getPackagePart_Name();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.UseCaseImpl <em>Use Case</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCaseImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getUseCase()
     * @generated
     */
    EClass USE_CASE = eINSTANCE.getUseCase();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute USE_CASE__NAME = eINSTANCE.getUseCase_Name();

    /**
     * The meta object literal for the '<em><b>Descriptions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USE_CASE__DESCRIPTIONS = eINSTANCE.getUseCase_Descriptions();

    /**
     * The meta object literal for the '<em><b>Allowed User Groups</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USE_CASE__ALLOWED_USER_GROUPS = eINSTANCE.getUseCase_AllowedUserGroups();

    /**
     * The meta object literal for the '<em><b>Inputs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USE_CASE__INPUTS = eINSTANCE.getUseCase_Inputs();

    /**
     * The meta object literal for the '<em><b>Optional Inputs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USE_CASE__OPTIONAL_INPUTS = eINSTANCE.getUseCase_OptionalInputs();

    /**
     * The meta object literal for the '<em><b>Outputs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USE_CASE__OUTPUTS = eINSTANCE.getUseCase_Outputs();

    /**
     * The meta object literal for the '<em><b>Preconditions</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USE_CASE__PRECONDITIONS = eINSTANCE.getUseCase_Preconditions();

    /**
     * The meta object literal for the '<em><b>Steps</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USE_CASE__STEPS = eINSTANCE.getUseCase_Steps();

    /**
     * The meta object literal for the '<em><b>Notes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USE_CASE__NOTES = eINSTANCE.getUseCase_Notes();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.DescriptionImpl <em>Description</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.DescriptionImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getDescription()
     * @generated
     */
    EClass DESCRIPTION = eINSTANCE.getDescription();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DESCRIPTION__NAME = eINSTANCE.getDescription_Name();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.AllowedUserGroupsImpl <em>Allowed User Groups</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.AllowedUserGroupsImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getAllowedUserGroups()
     * @generated
     */
    EClass ALLOWED_USER_GROUPS = eINSTANCE.getAllowedUserGroups();

    /**
     * The meta object literal for the '<em><b>Groups</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALLOWED_USER_GROUPS__GROUPS = eINSTANCE.getAllowedUserGroups_Groups();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.AllowedUserGroupImpl <em>Allowed User Group</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.AllowedUserGroupImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getAllowedUserGroup()
     * @generated
     */
    EClass ALLOWED_USER_GROUP = eINSTANCE.getAllowedUserGroup();

    /**
     * The meta object literal for the '<em><b>Many</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALLOWED_USER_GROUP__MANY = eINSTANCE.getAllowedUserGroup_Many();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALLOWED_USER_GROUP__NAME = eINSTANCE.getAllowedUserGroup_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALLOWED_USER_GROUP__TYPE = eINSTANCE.getAllowedUserGroup_Type();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.InputsImpl <em>Inputs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.InputsImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getInputs()
     * @generated
     */
    EClass INPUTS = eINSTANCE.getInputs();

    /**
     * The meta object literal for the '<em><b>Inputs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INPUTS__INPUTS = eINSTANCE.getInputs_Inputs();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.OptionalInputsImpl <em>Optional Inputs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.OptionalInputsImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getOptionalInputs()
     * @generated
     */
    EClass OPTIONAL_INPUTS = eINSTANCE.getOptionalInputs();

    /**
     * The meta object literal for the '<em><b>Inputs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPTIONAL_INPUTS__INPUTS = eINSTANCE.getOptionalInputs_Inputs();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.InputImpl <em>Input</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.InputImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getInput()
     * @generated
     */
    EClass INPUT = eINSTANCE.getInput();

    /**
     * The meta object literal for the '<em><b>Many</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INPUT__MANY = eINSTANCE.getInput_Many();

    /**
     * The meta object literal for the '<em><b>Optional</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INPUT__OPTIONAL = eINSTANCE.getInput_Optional();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INPUT__CONTENT = eINSTANCE.getInput_Content();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INPUT__TYPE = eINSTANCE.getInput_Type();

    /**
     * The meta object literal for the '<em><b>Example</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INPUT__EXAMPLE = eINSTANCE.getInput_Example();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.OutputsImpl <em>Outputs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.OutputsImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getOutputs()
     * @generated
     */
    EClass OUTPUTS = eINSTANCE.getOutputs();

    /**
     * The meta object literal for the '<em><b>Outputs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OUTPUTS__OUTPUTS = eINSTANCE.getOutputs_Outputs();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.OutputImpl <em>Output</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.OutputImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getOutput()
     * @generated
     */
    EClass OUTPUT = eINSTANCE.getOutput();

    /**
     * The meta object literal for the '<em><b>Many</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OUTPUT__MANY = eINSTANCE.getOutput_Many();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OUTPUT__CONTENT = eINSTANCE.getOutput_Content();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OUTPUT__TYPE = eINSTANCE.getOutput_Type();

    /**
     * The meta object literal for the '<em><b>Example</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OUTPUT__EXAMPLE = eINSTANCE.getOutput_Example();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.PreConditionsImpl <em>Pre Conditions</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.PreConditionsImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getPreConditions()
     * @generated
     */
    EClass PRE_CONDITIONS = eINSTANCE.getPreConditions();

    /**
     * The meta object literal for the '<em><b>Conditions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRE_CONDITIONS__CONDITIONS = eINSTANCE.getPreConditions_Conditions();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.ConditionImpl <em>Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.ConditionImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getCondition()
     * @generated
     */
    EClass CONDITION = eINSTANCE.getCondition();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONDITION__CONTENT = eINSTANCE.getCondition_Content();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.StepsImpl <em>Steps</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.StepsImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getSteps()
     * @generated
     */
    EClass STEPS = eINSTANCE.getSteps();

    /**
     * The meta object literal for the '<em><b>Steps</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STEPS__STEPS = eINSTANCE.getSteps_Steps();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.StepImpl <em>Step</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.StepImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getStep()
     * @generated
     */
    EClass STEP = eINSTANCE.getStep();

    /**
     * The meta object literal for the '<em><b>Number</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STEP__NUMBER = eINSTANCE.getStep_Number();

    /**
     * The meta object literal for the '<em><b>Action</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STEP__ACTION = eINSTANCE.getStep_Action();

    /**
     * The meta object literal for the '<em><b>Error</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STEP__ERROR = eINSTANCE.getStep_Error();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STEP__CONDITION = eINSTANCE.getStep_Condition();

    /**
     * The meta object literal for the '<em><b>Loop</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STEP__LOOP = eINSTANCE.getStep_Loop();

    /**
     * The meta object literal for the '<em><b>Exception</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STEP__EXCEPTION = eINSTANCE.getStep_Exception();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.RaiseErrorConditionalImpl <em>Raise Error Conditional</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.RaiseErrorConditionalImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getRaiseErrorConditional()
     * @generated
     */
    EClass RAISE_ERROR_CONDITIONAL = eINSTANCE.getRaiseErrorConditional();

    /**
     * The meta object literal for the '<em><b>Exception</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RAISE_ERROR_CONDITIONAL__EXCEPTION = eINSTANCE.getRaiseErrorConditional_Exception();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.RaiseErrorNowImpl <em>Raise Error Now</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.RaiseErrorNowImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getRaiseErrorNow()
     * @generated
     */
    EClass RAISE_ERROR_NOW = eINSTANCE.getRaiseErrorNow();

    /**
     * The meta object literal for the '<em><b>Exception</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RAISE_ERROR_NOW__EXCEPTION = eINSTANCE.getRaiseErrorNow_Exception();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.IfStatementImpl <em>If Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.IfStatementImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getIfStatement()
     * @generated
     */
    EClass IF_STATEMENT = eINSTANCE.getIfStatement();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__CONDITION = eINSTANCE.getIfStatement_Condition();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.LoopImpl <em>Loop</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.LoopImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getLoop()
     * @generated
     */
    EClass LOOP = eINSTANCE.getLoop();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOP__CONDITION = eINSTANCE.getLoop_Condition();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.BooleanConditionImpl <em>Boolean Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.BooleanConditionImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getBooleanCondition()
     * @generated
     */
    EClass BOOLEAN_CONDITION = eINSTANCE.getBooleanCondition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOLEAN_CONDITION__NAME = eINSTANCE.getBooleanCondition_Name();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.NotesImpl <em>Notes</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.NotesImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getNotes()
     * @generated
     */
    EClass NOTES = eINSTANCE.getNotes();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NOTES__CONTENT = eINSTANCE.getNotes_Content();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.UsedTypesImpl <em>Used Types</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.UsedTypesImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getUsedTypes()
     * @generated
     */
    EClass USED_TYPES = eINSTANCE.getUsedTypes();

    /**
     * The meta object literal for the '<em><b>Types</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USED_TYPES__TYPES = eINSTANCE.getUsedTypes_Types();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.TypeImpl <em>Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.TypeImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getType()
     * @generated
     */
    EClass TYPE = eINSTANCE.getType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__NAME = eINSTANCE.getType_Name();

    /**
     * The meta object literal for the '<em><b>Description</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__DESCRIPTION = eINSTANCE.getType_Description();

    /**
     * The meta object literal for the '<em><b>Import Info</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__IMPORT_INFO = eINSTANCE.getType_ImportInfo();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.UsedExceptionsImpl <em>Used Exceptions</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.UsedExceptionsImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getUsedExceptions()
     * @generated
     */
    EClass USED_EXCEPTIONS = eINSTANCE.getUsedExceptions();

    /**
     * The meta object literal for the '<em><b>Exceptions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USED_EXCEPTIONS__EXCEPTIONS = eINSTANCE.getUsedExceptions_Exceptions();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.ExceptionImpl <em>Exception</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.ExceptionImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getException()
     * @generated
     */
    EClass EXCEPTION = eINSTANCE.getException();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXCEPTION__TYPE = eINSTANCE.getException_Type();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.ExceptionDeclerationImpl <em>Exception Decleration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.ExceptionDeclerationImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getExceptionDecleration()
     * @generated
     */
    EClass EXCEPTION_DECLERATION = eINSTANCE.getExceptionDecleration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXCEPTION_DECLERATION__NAME = eINSTANCE.getExceptionDecleration_Name();

    /**
     * The meta object literal for the '<em><b>Message</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXCEPTION_DECLERATION__MESSAGE = eINSTANCE.getExceptionDecleration_Message();

    /**
     * The meta object literal for the '<em><b>Import Info</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXCEPTION_DECLERATION__IMPORT_INFO = eINSTANCE.getExceptionDecleration_ImportInfo();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.ExampleImpl <em>Example</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.ExampleImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getExample()
     * @generated
     */
    EClass EXAMPLE = eINSTANCE.getExample();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXAMPLE__NAME = eINSTANCE.getExample_Name();

    /**
     * The meta object literal for the '<em><b>Description</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXAMPLE__DESCRIPTION = eINSTANCE.getExample_Description();

    /**
     * The meta object literal for the '<em><b>Given</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXAMPLE__GIVEN = eINSTANCE.getExample_Given();

    /**
     * The meta object literal for the '<em><b>Given And</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXAMPLE__GIVEN_AND = eINSTANCE.getExample_GivenAnd();

    /**
     * The meta object literal for the '<em><b>When</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXAMPLE__WHEN = eINSTANCE.getExample_When();

    /**
     * The meta object literal for the '<em><b>When And</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXAMPLE__WHEN_AND = eINSTANCE.getExample_WhenAnd();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXAMPLE__THEN = eINSTANCE.getExample_Then();

    /**
     * The meta object literal for the '<em><b>Then And</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXAMPLE__THEN_AND = eINSTANCE.getExample_ThenAnd();

    /**
     * The meta object literal for the '<em><b>Explaination</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXAMPLE__EXPLAINATION = eINSTANCE.getExample_Explaination();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.GivenImpl <em>Given</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.GivenImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getGiven()
     * @generated
     */
    EClass GIVEN = eINSTANCE.getGiven();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GIVEN__CONTENT = eINSTANCE.getGiven_Content();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.GivenAndImpl <em>Given And</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.GivenAndImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getGivenAnd()
     * @generated
     */
    EClass GIVEN_AND = eINSTANCE.getGivenAnd();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GIVEN_AND__CONTENT = eINSTANCE.getGivenAnd_Content();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.WhenImpl <em>When</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.WhenImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getWhen()
     * @generated
     */
    EClass WHEN = eINSTANCE.getWhen();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute WHEN__CONTENT = eINSTANCE.getWhen_Content();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.ThenImpl <em>Then</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.ThenImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getThen()
     * @generated
     */
    EClass THEN = eINSTANCE.getThen();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THEN__CONTENT = eINSTANCE.getThen_Content();

    /**
     * The meta object literal for the '{@link io.deniffel.dsl.useCase.useCase.impl.ThenAndImpl <em>Then And</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.deniffel.dsl.useCase.useCase.impl.ThenAndImpl
     * @see io.deniffel.dsl.useCase.useCase.impl.UseCasePackageImpl#getThenAnd()
     * @generated
     */
    EClass THEN_AND = eINSTANCE.getThenAnd();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THEN_AND__CONTENT = eINSTANCE.getThenAnd_Content();

  }

} //UseCasePackage
