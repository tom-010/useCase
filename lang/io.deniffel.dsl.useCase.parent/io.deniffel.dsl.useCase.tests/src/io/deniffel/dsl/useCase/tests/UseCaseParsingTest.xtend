/*
 * generated by Xtext 2.13.0
 */
package io.deniffel.dsl.useCase.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import static org.junit.Assert.*;
import org.junit.Test
import org.junit.runner.RunWith
import io.deniffel.dsl.useCase.useCase.UseCase
import io.deniffel.dsl.useCase.useCase.Description

@RunWith(XtextRunner)
@InjectWith(UseCaseInjectorProvider)
class UseCaseParsingTest {
	@Inject
	ParseHelper<UseCase> parseHelper
	
	@Test
	def void useCaseKeywordGenerationWorks() {
		val result = parseHelper.parse('''
			use-case createUser
			end of use-case
		''')
		assertNotNull(result);
		val errors = result.eResource.errors
		assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}
	
	@Test
	def void descriptionSecionIsAddedToTheModelAsString() {
		val model = parseHelper.parse('''
			use-case "Create a new User"
			description: "This is a test"
			end of use-case
		''') 
		assertNotNull(model);
		val errors = model.eResource.errors
		assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
		assertEquals(1, model.sections.length()); 
		assertTrue(model.sections.get(0) instanceof Description);
	}
}
